(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2888],{1118:function(e,t,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/_app",function(){return r(5107)}])},9180:function(e,t,r){"use strict";var a=r(5893);r(7294);var n=r(1664),i=r.n(n),o=r(4549);t.Z=e=>{let{children:t,variant:r="primary",size:n="md",loading:s=!1,disabled:d=!1,className:l="",icon:c,iconPosition:u="left",href:m,...g}=e,p="".concat("inline-flex items-center justify-center font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed"," ").concat({primary:"bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500",secondary:"bg-gray-200 text-gray-900 hover:bg-gray-300 focus:ring-gray-500",success:"bg-green-600 text-white hover:bg-green-700 focus:ring-green-500",warning:"bg-orange-500 text-white hover:bg-orange-600 focus:ring-orange-500",danger:"bg-red-600 text-white hover:bg-red-700 focus:ring-red-500",outline:"border border-gray-300 bg-white text-gray-700 hover:bg-gray-50 focus:ring-blue-500",ghost:"text-gray-700 hover:bg-gray-100 focus:ring-gray-500"}[r]," ").concat({sm:"px-3 py-1.5 text-sm",md:"px-4 py-2 text-sm",lg:"px-6 py-3 text-base",xl:"px-8 py-4 text-lg"}[n]," ").concat(l),f=(0,a.jsxs)(a.Fragment,{children:[s&&(0,a.jsx)(o.Z,{size:"sm",color:"outline"===r||"ghost"===r?"gray":"white",className:"mr-2"}),c&&"left"===u&&!s&&(0,a.jsx)(c,{className:"w-4 h-4 mr-2"}),t,c&&"right"===u&&!s&&(0,a.jsx)(c,{className:"w-4 h-4 ml-2"})]});return m?(0,a.jsx)(i(),{href:m,className:p,children:f}):(0,a.jsx)("button",{className:p,disabled:d||s,...g,children:f})}},4105:function(e,t,r){"use strict";var a=r(5893);r(7294);let Card=e=>{let{children:t,className:r="",padding:n="default",shadow:i="default",hover:o=!1,...s}=e;return(0,a.jsx)("div",{className:"".concat("bg-white rounded-lg border border-gray-200"," ").concat({none:"",sm:"p-4",default:"p-6",lg:"p-8"}[n]," ").concat({none:"",sm:"shadow-sm",default:"shadow-sm",md:"shadow-md",lg:"shadow-lg"}[i]," ").concat(o?"hover:shadow-md transition-shadow duration-200":""," ").concat(r),...s,children:t})};Card.Header=e=>{let{children:t,className:r="",...n}=e;return(0,a.jsx)("div",{className:"border-b border-gray-200 pb-4 mb-4 ".concat(r),...n,children:t})},Card.Title=e=>{let{children:t,className:r="",...n}=e;return(0,a.jsx)("h3",{className:"text-lg font-semibold text-gray-900 ".concat(r),...n,children:t})},Card.Content=e=>{let{children:t,className:r="",...n}=e;return(0,a.jsx)("div",{className:r,...n,children:t})},Card.Footer=e=>{let{children:t,className:r="",...n}=e;return(0,a.jsx)("div",{className:"border-t border-gray-200 pt-4 mt-4 ".concat(r),...n,children:t})},t.Z=Card},4549:function(e,t,r){"use strict";var a=r(5893);r(7294),t.Z=e=>{let{size:t="md",color:r="primary",className:n=""}=e;return(0,a.jsx)("div",{className:"animate-spin rounded-full border-2 border-t-transparent ".concat({sm:"h-4 w-4",md:"h-6 w-6",lg:"h-8 w-8",xl:"h-12 w-12"}[t]," ").concat({primary:"border-blue-600",white:"border-white",gray:"border-gray-400"}[r]," ").concat(n),role:"status","aria-label":"Loading",children:(0,a.jsx)("span",{className:"sr-only",children:"Loading..."})})}},8786:function(e,t,r){"use strict";r.d(t,{Ho:function(){return AuthProvider}});var a=r(5893),n=r(7294),i=r(591);let o={user:null,isAuthenticated:!1,isLoading:!0,error:null},s={LOGIN_START:"LOGIN_START",LOGIN_SUCCESS:"LOGIN_SUCCESS",LOGIN_FAILURE:"LOGIN_FAILURE",LOGOUT:"LOGOUT",LOAD_USER:"LOAD_USER",CLEAR_ERROR:"CLEAR_ERROR"},authReducer=(e,t)=>{switch(t.type){case s.LOGIN_START:return{...e,isLoading:!0,error:null};case s.LOGIN_SUCCESS:return{...e,user:t.payload.user,isAuthenticated:!0,isLoading:!1,error:null};case s.LOGIN_FAILURE:return{...e,user:null,isAuthenticated:!1,isLoading:!1,error:t.payload.error};case s.LOGOUT:return{...e,user:null,isAuthenticated:!1,isLoading:!1,error:null};case s.LOAD_USER:return{...e,user:t.payload.user,isAuthenticated:!!t.payload.user,isLoading:!1};case s.CLEAR_ERROR:return{...e,error:null};default:return e}},d=(0,n.createContext)(),AuthProvider=e=>{let{children:t}=e,[r,l]=(0,n.useReducer)(authReducer,o);(0,n.useEffect)(()=>{loadUser()},[]);let loadUser=async()=>{try{let e=localStorage.getItem("authToken");if(e){let e=await i.kv.getProfile();l({type:s.LOAD_USER,payload:{user:e.data.user}})}else l({type:s.LOAD_USER,payload:{user:null}})}catch(e){localStorage.removeItem("authToken"),l({type:s.LOAD_USER,payload:{user:null}})}},login=async function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];l({type:s.LOGIN_START});try{let r=t?await i.kv.studentLogin(e):await i.kv.login(e),{user:a,token:n}=r;return localStorage.setItem("authToken",n),l({type:s.LOGIN_SUCCESS,payload:{user:a}}),{success:!0,user:a}}catch(t){var r,a;let e=(null===(a=t.response)||void 0===a?void 0:null===(r=a.data)||void 0===r?void 0:r.message)||t.message||"Login failed";return l({type:s.LOGIN_FAILURE,payload:{error:e}}),{success:!1,error:e}}},logout=async()=>{try{await i.kv.logout()}catch(e){}finally{localStorage.removeItem("authToken"),l({type:s.LOGOUT})}},register=async e=>{l({type:s.LOGIN_START});try{return await i.kv.register(e),{success:!0}}catch(a){var t,r;let e=(null===(r=a.response)||void 0===r?void 0:null===(t=r.data)||void 0===t?void 0:t.message)||"Registration failed";return l({type:s.LOGIN_FAILURE,payload:{error:e}}),{success:!1,error:e}}},c={...r,login,logout,register,clearError:()=>{l({type:s.CLEAR_ERROR})},loadUser};return(0,a.jsx)(d.Provider,{value:c,children:t})};t.ZP=d},5107:function(e,t,r){"use strict";r.r(t),r.d(t,{default:function(){return _app}});var a=r(5893);r(2352);var n=r(8786),i=r(7294),o=r(7219),s=r(9180),d=r(4105);let ErrorBoundary=class ErrorBoundary extends i.Component{static getDerivedStateFromError(e){return{hasError:!0}}componentDidCatch(e,t){this.setState({error:e,errorInfo:t,eventId:this.generateEventId()}),window.Sentry&&window.Sentry.captureException(e,{contexts:{react:{componentStack:t.componentStack}}}),this.reportError(e,t)}render(){return this.state.hasError?this.props.fallback?this.props.fallback(this.state.error,this.handleRetry):(0,a.jsx)("div",{className:"min-h-screen bg-gray-50 flex items-center justify-center p-4",children:(0,a.jsx)(d.Z,{className:"max-w-lg w-full",children:(0,a.jsxs)(d.Z.Content,{className:"text-center py-8",children:[(0,a.jsx)("div",{className:"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4",children:(0,a.jsx)(o.BJv,{className:"w-8 h-8 text-red-600"})}),(0,a.jsx)("h1",{className:"text-xl font-semibold text-gray-900 mb-2",children:"Something went wrong"}),(0,a.jsx)("p",{className:"text-gray-600 mb-6",children:"We're sorry, but something unexpected happened. Our team has been notified."}),!1,this.state.eventId&&(0,a.jsxs)("p",{className:"text-xs text-gray-500 mb-6",children:["Error ID: ",this.state.eventId]}),(0,a.jsxs)("div",{className:"flex flex-col sm:flex-row gap-3 justify-center",children:[(0,a.jsx)(s.Z,{variant:"primary",icon:o.Bw1,onClick:this.handleRetry,children:"Try Again"}),(0,a.jsx)(s.Z,{variant:"outline",icon:o.m6D,onClick:this.handleGoHome,children:"Go to Dashboard"})]})]})})}):this.props.children}constructor(e){super(e),this.generateEventId=()=>"error_"+Date.now()+"_"+Math.random().toString(36).substr(2,9),this.reportError=async(e,t)=>{try{await fetch("/api/errors",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:e.message,stack:e.stack,componentStack:t.componentStack,userAgent:navigator.userAgent,url:window.location.href,timestamp:new Date().toISOString(),eventId:this.state.eventId})})}catch(e){}},this.handleRetry=()=>{this.setState({hasError:!1,error:null,errorInfo:null,eventId:null})},this.handleGoHome=()=>{window.location.href="/dashboard"},this.state={hasError:!1,error:null,errorInfo:null,eventId:null}}};let useMemoryMonitor=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:3e4;(0,i.useEffect)(()=>{if(!("memory"in performance))return;let checkMemory=()=>{let e=performance.memory,t=Math.round(e.usedJSHeapSize/1048576),r=Math.round(e.totalJSHeapSize/1048576);e.jsHeapSizeLimit;let a=e.usedJSHeapSize/e.jsHeapSizeLimit*100;window.gtag&&window.gtag("event","memory_usage",{used_mb:t,total_mb:r,usage_percentage:a,event_category:"performance"})},t=setInterval(checkMemory,e);return checkMemory(),()=>clearInterval(t)},[e])},useWebVitalsMonitor=()=>{(0,i.useEffect)(()=>{let reportWebVitals=e=>{window.gtag&&window.gtag("event",e.name,{value:Math.round("CLS"===e.name?1e3*e.value:e.value),event_category:"web_vitals",event_label:e.id,non_interaction:!0})};r.e(1216).then(r.bind(r,8085)).then(e=>{let{getCLS:t,getFID:r,getFCP:a,getLCP:n,getTTFB:i}=e;t(reportWebVitals),r(reportWebVitals),a(reportWebVitals),n(reportWebVitals),i(reportWebVitals)}).catch(()=>{})},[])};let LiveAnnouncer=class LiveAnnouncer{init(){"undefined"!=typeof document&&(this.liveRegion=document.createElement("div"),this.liveRegion.setAttribute("aria-live","polite"),this.liveRegion.setAttribute("aria-atomic","true"),this.liveRegion.style.position="absolute",this.liveRegion.style.left="-10000px",this.liveRegion.style.width="1px",this.liveRegion.style.height="1px",this.liveRegion.style.overflow="hidden",document.body.appendChild(this.liveRegion))}announce(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"polite";this.liveRegion&&(this.liveRegion.setAttribute("aria-live",t),this.liveRegion.textContent=e,setTimeout(()=>{this.liveRegion&&(this.liveRegion.textContent="")},1e3))}destroy(){this.liveRegion&&this.liveRegion.parentNode&&(this.liveRegion.parentNode.removeChild(this.liveRegion),this.liveRegion=null)}constructor(){this.liveRegion=null,this.init()}};let initializeA11y=()=>{window.liveAnnouncer||(window.liveAnnouncer=new LiveAnnouncer);let e=document.createElement("a");e.href="#main-content",e.textContent="Skip to main content",e.className="skip-link",e.style.cssText="\n    position: absolute;\n    top: -40px;\n    left: 6px;\n    background: #000;\n    color: #fff;\n    padding: 8px;\n    text-decoration: none;\n    z-index: 1000;\n    transition: top 0.3s;\n  ",e.addEventListener("focus",()=>{e.style.top="6px"}),e.addEventListener("blur",()=>{e.style.top="-40px"}),document.body.insertBefore(e,document.body.firstChild)},registerServiceWorker=()=>{"serviceWorker"in navigator&&window.addEventListener("load",()=>{navigator.serviceWorker.register("/sw.js").then(e=>{}).catch(e=>{})})},preloadCriticalResources=()=>{[{href:"/fonts/inter.woff2",as:"font",type:"font/woff2",crossOrigin:"anonymous"},{href:"/api/auth/me",as:"fetch",crossOrigin:"same-origin"}].forEach(e=>{let t=document.createElement("link");t.rel="preload",Object.assign(t,e),document.head.appendChild(t)})},optimizeCriticalRenderingPath=()=>{let e=document.createElement("style");e.textContent="\n    .loading-spinner { animation: spin 1s linear infinite; }\n    @keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }\n    .btn-primary { background-color: #1B365D; color: white; }\n  ",document.head.appendChild(e),["https://fonts.googleapis.com","https://api.example.com"].forEach(e=>{let t=document.createElement("link");t.rel="preconnect",t.href=e,document.head.appendChild(t)})};var _app=function(e){let{Component:t,pageProps:o}=e;return useWebVitalsMonitor(),useMemoryMonitor(),(0,i.useEffect)(()=>{initializeA11y(),registerServiceWorker(),preloadCriticalResources(),optimizeCriticalRenderingPath(),r.e(1216).then(r.bind(r,8085)).then(e=>{let{getCLS:t,getFID:r,getFCP:a,getLCP:n,getTTFB:i}=e;function sendToAnalytics(e){"undefined"!=typeof gtag&&gtag("event",e.name,{value:Math.round("CLS"===e.name?1e3*e.value:e.value),event_category:"web_vitals",event_label:e.id,non_interaction:!0})}t(sendToAnalytics),r(sendToAnalytics),a(sendToAnalytics),n(sendToAnalytics),i(sendToAnalytics)}).catch(()=>{})},[]),(0,a.jsx)(ErrorBoundary,{children:(0,a.jsx)(n.Ho,{children:(0,a.jsx)(t,{...o})})})}},9993:function(e,t,r){"use strict";r.d(t,{Ho:function(){return getCourses},Os:function(){return getTeachers},TK:function(){return setupTimetable},e3:function(){return updateTimetableSlot},k:function(){return getClasses},nE:function(){return deleteTimetableSlot},zk:function(){return getTimetableSlot}});var a=r(1265);let n=new class{async createUser(e){if((0,a.MN)(e,["firstName","lastName","email","password","role"]),!(0,a.oH)(e.email))throw Error("Invalid email format");if(e.password.length<6)throw Error("Password must be at least 6 characters long");if(!(0,a.ap)(e.role))throw Error("Invalid role. Must be one of: student, teacher, hod, finance, admin");if("student"===e.role&&!e.departmentId)throw Error("Department ID is required for students");if(e.departmentId&&!(0,a.fV)(e.departmentId))throw Error("Department ID must be a positive integer");if(e.additionalData){if(e.additionalData.enrollmentYear&&!(0,a.fV)(e.additionalData.enrollmentYear))throw Error("Enrollment year must be a positive integer");if(e.additionalData.enrollmentDate&&!/^\d{4}-\d{2}-\d{2}$/.test(e.additionalData.enrollmentDate))throw Error("Invalid enrollment date format. Use YYYY-MM-DD")}let t=await a.ZP.post("/admin/users",e);return(0,a.Ro)(t)}async getAllUsers(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,r=arguments.length>2?arguments[2]:void 0;if(!(0,a.fV)(e))throw Error("Page must be a positive integer");if(!(0,a.fV)(t)||t>100)throw Error("Limit must be a positive integer not exceeding 100");let n=(0,a.z$)(e,t),i="/admin/users/".concat(n,"/").concat(t),o=new URLSearchParams;if(null==r?void 0:r.role){if(!(0,a.ap)(r.role))throw Error("Invalid role filter");o.append("role",r.role)}if(null==r?void 0:r.departmentId){if(!(0,a.fV)(r.departmentId))throw Error("Department ID filter must be a positive integer");o.append("departmentId",r.departmentId.toString())}if(null==r?void 0:r.search){if("string"!=typeof r.search||0===r.search.trim().length)throw Error("Search filter must be a non-empty string");o.append("search",r.search.trim())}o.toString()&&(i+="?".concat(o.toString()));let s=await a.ZP.get(i);return(0,a.Ro)(s)}async getUserById(e){if(!(0,a.fV)(e))throw Error("User ID must be a positive integer");let t=await a.ZP.get("/admin/users/by-id/".concat(e));return(0,a.Ro)(t)}async updateUserStatus(e,t){if(!(0,a.fV)(e))throw Error("User ID must be a positive integer");let r=["active","inactive","suspended","pending"];if(!r.includes(t))throw Error("Invalid status. Must be one of: ".concat(r.join(", ")));let n=await a.ZP.put("/admin/users/".concat(e),{status:t});return(0,a.Ro)(n)}async updateUser(e,t){if(!(0,a.fV)(e))throw Error("User ID must be a positive integer");if(t.email&&!(0,a.oH)(t.email))throw Error("Invalid email format");if(t.role&&!(0,a.ap)(t.role))throw Error("Invalid role. Must be one of: student, teacher, hod, finance, admin");if(t.departmentId&&!(0,a.fV)(t.departmentId))throw Error("Department ID must be a positive integer");if(t.firstName&&("string"!=typeof t.firstName||0===t.firstName.trim().length))throw Error("First name must be a non-empty string");if(t.lastName&&("string"!=typeof t.lastName||0===t.lastName.trim().length))throw Error("Last name must be a non-empty string");let r=await a.ZP.put("/admin/users/".concat(e),t);return(0,a.Ro)(r)}async deleteUser(e){if(!(0,a.fV)(e))throw Error("User ID must be a positive integer");let t=await a.ZP.delete("/admin/users/".concat(e));return(0,a.Ro)(t)}async getAllStudents(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;if(!(0,a.fV)(e))throw Error("Page must be a positive integer");if(!(0,a.fV)(t)||t>100)throw Error("Limit must be a positive integer not exceeding 100");let r=(0,a.z$)(e,t),n=await a.ZP.get("/admin/students/".concat(r,"/").concat(t));return(0,a.Ro)(n)}async createStudent(e){if((0,a.MN)(e,["firstName","lastName","email","studentId","departmentId"]),!(0,a.oH)(e.email))throw Error("Invalid email format");if(!(0,a.fV)(e.departmentId))throw Error("Department ID must be a positive integer");let t=await a.ZP.post("/admin/students",e);return(0,a.Ro)(t)}async updateStudent(e,t){if(!(0,a.fV)(e))throw Error("Student ID must be a positive integer");if(t.email&&!(0,a.oH)(t.email))throw Error("Invalid email format");if(t.departmentId&&!(0,a.fV)(t.departmentId))throw Error("Department ID must be a positive integer");let r=await a.ZP.put("/admin/students/".concat(e),t);return(0,a.Ro)(r)}async updateStudentStatus(e,t){if(!(0,a.fV)(e))throw Error("Student ID must be a positive integer");let r=["active","inactive","suspended","graduated"];if(!r.includes(t))throw Error("Invalid status. Must be one of: ".concat(r.join(", ")));let n=await a.ZP.put("/admin/students/".concat(e,"/status"),{status:t});return(0,a.Ro)(n)}async deleteStudent(e){if(!(0,a.fV)(e))throw Error("Student ID must be a positive integer");let t=await a.ZP.delete("/admin/students/".concat(e));return(0,a.Ro)(t)}async getAllDepartments(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;if(!(0,a.fV)(e))throw Error("Page must be a positive integer");if(!(0,a.fV)(t)||t>100)throw Error("Limit must be a positive integer not exceeding 100");let r=(0,a.z$)(e,t),n=await a.ZP.get("/admin/departments/".concat(r,"/").concat(t));return(0,a.Ro)(n)}async getDepartmentById(e){if(!(0,a.fV)(e))throw Error("Department ID must be a positive integer");let t=await a.ZP.get("/admin/departments/".concat(e));return(0,a.Ro)(t)}async createDepartment(e){if((0,a.MN)(e,["name","code"]),"string"!=typeof e.name||0===e.name.trim().length)throw Error("Department name must be a non-empty string");if("string"!=typeof e.code||0===e.code.trim().length)throw Error("Department code must be a non-empty string");if(e.head_id&&!(0,a.fV)(e.head_id))throw Error("Head ID must be a positive integer");if(e.description&&"string"!=typeof e.description)throw Error("Description must be a string");let t=await a.ZP.post("/admin/departments",e);return(0,a.Ro)(t)}async updateDepartment(e,t){if(!(0,a.fV)(e))throw Error("Department ID must be a positive integer");if(t.name&&("string"!=typeof t.name||0===t.name.trim().length))throw Error("Department name must be a non-empty string");if(t.code&&("string"!=typeof t.code||0===t.code.trim().length))throw Error("Department code must be a non-empty string");if(t.head_id&&!(0,a.fV)(t.head_id))throw Error("Head ID must be a positive integer");if(t.description&&"string"!=typeof t.description)throw Error("Description must be a string");let r=await a.ZP.put("/admin/departments/".concat(e),t);return(0,a.Ro)(r)}async deleteDepartment(e){if(!(0,a.fV)(e))throw Error("Department ID must be a positive integer");let t=await a.ZP.delete("/admin/departments/".concat(e));return(0,a.Ro)(t)}async getAllCourses(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,r=arguments.length>2?arguments[2]:void 0;if(!(0,a.fV)(e))throw Error("Page must be a positive integer");if(!(0,a.fV)(t))throw Error("Limit must be a positive integer");let n=(0,a.z$)(e,t),i=new URLSearchParams;(null==r?void 0:r.search)&&i.append("search",r.search),(null==r?void 0:r.semester)&&i.append("semester",r.semester),(null==r?void 0:r.department)&&i.append("department",r.department);let o=i.toString(),s="/admin/courses/all/".concat(n,"/").concat(t).concat(o?"?".concat(o):""),d=await a.ZP.get(s);return(0,a.Ro)(d)}async getCourses(){let e=await a.ZP.get("/admin/courses");return(0,a.Ro)(e)}async getClasses(){let e=await a.ZP.get("/admin/classes");return(0,a.Ro)(e)}async getTeachers(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100;if(!(0,a.fV)(e))throw Error("Page must be a positive integer");if(!(0,a.fV)(t))throw Error("Limit must be a positive integer");let r=(0,a.z$)(e,t),n=await a.ZP.get("/admin/users/".concat(r,"/").concat(t,"?role=teacher"));return(0,a.Ro)(n)}async getTimetableSlot(e){let t=await a.ZP.get("/admin/timetable/".concat(e));return(0,a.Ro)(t)}async updateTimetableSlot(e,t){let r=await a.ZP.put("/admin/timetable/".concat(e),t);return(0,a.Ro)(r)}async deleteTimetableSlot(e){let t=await a.ZP.delete("/admin/timetable/".concat(e));return(0,a.Ro)(t)}async manageCourses(e){if((0,a.MN)(e,["action","courseData"]),!["add","edit","delete"].includes(e.action))throw Error("Invalid action. Must be one of: add, edit, delete");if(("edit"===e.action||"delete"===e.action)&&(!e.courseData.id||!(0,a.fV)(e.courseData.id)))throw Error("Course ID is required for edit/delete actions and must be a positive integer");if("add"===e.action||"edit"===e.action){if((0,a.MN)(e.courseData,["course_code","name","credits"]),"string"!=typeof e.courseData.course_code||0===e.courseData.course_code.trim().length)throw Error("Course code must be a non-empty string");if("string"!=typeof e.courseData.name||0===e.courseData.name.trim().length)throw Error("Course name must be a non-empty string");if(!(0,a.fV)(e.courseData.credits))throw Error("Credits must be a positive number")}let t=await a.ZP.post("/admin/courses/manage",e);return(0,a.Ro)(t)}async manageAcademicCalendar(e){if((0,a.MN)(e,["eventName","eventDate","eventType"]),"string"!=typeof e.eventName||0===e.eventName.trim().length)throw Error("Event name must be a non-empty string");if(!/^\d{4}-\d{2}-\d{2}$/.test(e.eventDate))throw Error("Invalid event date format. Use YYYY-MM-DD");if("string"!=typeof e.eventType||0===e.eventType.trim().length)throw Error("Event type must be a non-empty string");if(e.description&&"string"!=typeof e.description)throw Error("Description must be a string");let t=await a.ZP.post("/admin/calendar",e);return(0,a.Ro)(t)}async getAcademicCalendar(){let e=await a.ZP.get("/admin/calendar");return(0,a.Ro)(e)}async updateAcademicEvent(e,t){if(!(0,a.fV)(e))throw Error("Event ID must be a positive integer");(0,a.MN)(t,["eventName","eventDate","eventType"]);let r=await a.ZP.put("/admin/calendar/".concat(e),t);return(0,a.Ro)(r)}async deleteAcademicEvent(e){if(!(0,a.fV)(e))throw Error("Event ID must be a positive integer");let t=await a.ZP.delete("/admin/calendar/".concat(e));return(0,a.Ro)(t)}async setupTimetable(e){if((0,a.MN)(e,["action","timetableData"]),!["add","update","delete"].includes(e.action))throw Error("Invalid action. Must be one of: add, update, delete");let t=e.timetableData;if((0,a.MN)(t,["course_id","teacher_id","class_id","day_of_week","start_time","end_time"]),!(0,a.fV)(t.course_id))throw Error("Course ID must be a positive integer");if(!(0,a.fV)(t.teacher_id))throw Error("Teacher ID must be a positive integer");if(!(0,a.fV)(t.class_id))throw Error("Class ID must be a positive integer");if("number"!=typeof t.day_of_week||t.day_of_week<1||t.day_of_week>7)throw Error("Day of week must be a number between 1 (Monday) and 7 (Sunday)");let r=/^([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/;if(!r.test(t.start_time))throw Error("Invalid start time format. Use HH:MM:SS");if(!r.test(t.end_time))throw Error("Invalid end time format. Use HH:MM:SS");let n=new Date("1970-01-01T".concat(t.start_time)),i=new Date("1970-01-01T".concat(t.end_time));if(n>=i)throw Error("Start time must be before end time");let o=await a.ZP.post("/admin/timetable",e);return(0,a.Ro)(o)}async getTimetable(e){let t="/admin/timetable";if(e){let r=new URLSearchParams;if(e.semester){if("string"!=typeof e.semester||0===e.semester.trim().length)throw Error("Semester must be a non-empty string");r.append("semester",e.semester)}if(e.department){if("string"!=typeof e.department||0===e.department.trim().length)throw Error("Department must be a non-empty string");r.append("department",e.department)}r.toString()&&(t+="?".concat(r.toString()))}let r=await a.ZP.get(t);return(0,a.Ro)(r)}async getSystemStats(){let e=await a.ZP.get("/admin/stats");return(0,a.Ro)(e)}},getCourses=()=>n.getCourses(),getClasses=()=>n.getClasses(),getTeachers=(e,t)=>n.getTeachers(e,t),getTimetableSlot=e=>n.getTimetableSlot(e),updateTimetableSlot=(e,t)=>n.updateTimetableSlot(e,t),deleteTimetableSlot=e=>n.deleteTimetableSlot(e),setupTimetable=e=>n.setupTimetable(e);t.ZP=n},1265:function(e,t,r){"use strict";r.d(t,{$8:function(){return isAuthenticated},C9:function(){return validateStudentStatus},DB:function(){return formatDateForApi},MN:function(){return validateRequiredFields},Rn:function(){return clearAuthToken},Ro:function(){return handleApiResponse},Y_:function(){return validateYear},ap:function(){return validateUserRole},bW:function(){return getAuthToken},cN:function(){return validateDateFormat},dG:function(){return validateAttendanceStatus},e$:function(){return getErrorMessage},fV:function(){return validatePositiveNumber},oH:function(){return validateEmail},uB:function(){return setAuthToken},z$:function(){return pageToOffset}});var a=r(7066);let n=a.Z.create({baseURL:"http://localhost:5000/api",timeout:3e4,headers:{"Content-Type":"application/json"}});n.interceptors.request.use(e=>{{let t=localStorage.getItem("authToken");t&&e.headers&&(e.headers.Authorization="Bearer ".concat(t))}return e},e=>Promise.reject(e)),n.interceptors.response.use(e=>e,e=>{var t,r;let a={message:"An unexpected error occurred",status:null===(t=e.response)||void 0===t?void 0:t.status,code:e.code,details:null===(r=e.response)||void 0===r?void 0:r.data};if(e.response){let{status:t,data:r}=e.response;switch(a.message=(null==r?void 0:r.message)||"HTTP ".concat(t," Error"),a.status=t,t){case 401:localStorage.removeItem("authToken"),"/login"!==window.location.pathname&&(window.location.href="/login"),a.message="Authentication required. Please log in again.";break;case 403:a.message="You do not have permission to perform this action.";break;case 404:a.message="The requested resource was not found.";break;case 409:a.message=(null==r?void 0:r.message)||"A conflict occurred. The data may already exist.";break;case 422:a.message=(null==r?void 0:r.message)||"Validation failed. Please check your input.";break;case 429:a.message="Too many requests. Please try again later.";break;case 500:a.message="Internal server error. Please try again later.";break;case 502:case 503:case 504:a.message="Service temporarily unavailable. Please try again later.";break;default:a.message=(null==r?void 0:r.message)||"HTTP ".concat(t," Error")}}else e.request?(a.message="Network error. Please check your internet connection.",a.code="NETWORK_ERROR"):a.message=e.message||"Request configuration error";return Promise.reject(a)});let handleApiResponse=e=>e.data,createApiError=(e,t,r)=>({message:e,status:t,code:r}),isApiError=e=>e&&"string"==typeof e.message,getErrorMessage=e=>{var t,r;return isApiError(e)?e.message:(null==e?void 0:null===(r=e.response)||void 0===r?void 0:null===(t=r.data)||void 0===t?void 0:t.message)?e.response.data.message:(null==e?void 0:e.message)?e.message:"An unexpected error occurred"},isAuthenticated=()=>!!localStorage.getItem("authToken"),getAuthToken=()=>localStorage.getItem("authToken"),setAuthToken=e=>{localStorage.setItem("authToken",e)},clearAuthToken=()=>{localStorage.removeItem("authToken")},pageToOffset=(e,t)=>Math.max(0,(e-1)*t),formatDateForApi=e=>"string"==typeof e?e:e.toISOString().split("T")[0],validateRequiredFields=(e,t)=>{let r=t.filter(t=>!e[t]);if(r.length>0)throw createApiError("Missing required fields: ".concat(r.join(", ")),400,"VALIDATION_ERROR")},validateEmail=e=>/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e),validateDateFormat=e=>/^\d{4}-\d{2}-\d{2}$/.test(e),validatePositiveNumber=e=>"number"==typeof e&&e>0,validateYear=e=>{let t=new Date().getFullYear();return e>=2e3&&e<=t+10},validateAttendanceStatus=e=>["present","absent","late"].includes(e),validateUserRole=e=>["student","teacher","hod","finance","admin"].includes(e),validateStudentStatus=e=>["active","inactive","graduated","suspended"].includes(e);t.ZP=n},591:function(e,t,r){"use strict";r.d(t,{Sb:function(){return p.ZP},kv:function(){return i},sz:function(){return g},pW:function(){return u},t7:function(){return s},$o:function(){return l}});var a=r(1265);let n=new class{async login(e){if((0,a.MN)(e,["email","password"]),!(0,a.oH)(e.email))throw Error("Invalid email format");try{let t=await a.ZP.post("/auth/login",e),r=(0,a.Ro)(t);return r.token&&(0,a.uB)(r.token),r}catch(e){throw(0,a.Rn)(),e}}async studentLogin(e){if((0,a.MN)(e,["email","password"]),!(0,a.oH)(e.email))throw Error("Invalid email format");try{let t=await a.ZP.post("/auth/student/login",e),r=(0,a.Ro)(t);return r.token&&(0,a.uB)(r.token),r}catch(e){throw(0,a.Rn)(),e}}async logout(){try{let e=await a.ZP.post("/auth/logout"),t=(0,a.Ro)(e);return(0,a.Rn)(),t}catch(e){throw(0,a.Rn)(),e}}async getProfile(){try{let e=await a.ZP.get("/auth/profile");return(0,a.Ro)(e)}catch(e){throw 401===e.status&&(0,a.Rn)(),e}}async register(e){if((0,a.MN)(e,["first_name","last_name","email","password","role"]),!(0,a.oH)(e.email))throw Error("Invalid email format");if(e.password.length<6)throw Error("Password must be at least 6 characters long");if(!["teacher","hod","finance","admin"].includes(e.role))throw Error("Invalid role. Must be one of: teacher, hod, finance, admin");let t=await a.ZP.post("/auth/register",e);return(0,a.Ro)(t)}async forgotPassword(e){if(!e)throw Error("Email is required");if(!(0,a.oH)(e))throw Error("Invalid email format");let t=await a.ZP.post("/auth/forgot-password",{email:e});return(0,a.Ro)(t)}async resetPassword(e,t){if(!e)throw Error("Reset token is required");if(!t)throw Error("New password is required");if(t.length<6)throw Error("Password must be at least 6 characters long");let r=await a.ZP.post("/auth/reset-password",{token:e,newPassword:t});return(0,a.Ro)(r)}isAuthenticated(){return!!localStorage.getItem("authToken")}getToken(){return localStorage.getItem("authToken")}clearAuth(){(0,a.Rn)()}};var i=n;let o=new class{async getProfile(){let e=await a.ZP.get("/students/profile");return(0,a.Ro)(e)}async updateProfile(e){if(e.email&&!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e.email))throw Error("Invalid email format");if(e.date_of_birth&&!(0,a.cN)(e.date_of_birth))throw Error("Invalid date format. Use YYYY-MM-DD");if(e.enrollment_date&&!(0,a.cN)(e.enrollment_date))throw Error("Invalid enrollment date format. Use YYYY-MM-DD");if(e.graduation_date&&!(0,a.cN)(e.graduation_date))throw Error("Invalid graduation date format. Use YYYY-MM-DD");if(e.department_id&&("number"!=typeof e.department_id||e.department_id<=0))throw Error("Department ID must be a positive integer");if(e.enrollment_year&&("number"!=typeof e.enrollment_year||e.enrollment_year<2e3||e.enrollment_year>new Date().getFullYear()+10))throw Error("Invalid enrollment year");if(e.current_year&&("number"!=typeof e.current_year||e.current_year<1||e.current_year>10))throw Error("Current year must be between 1 and 10");if(e.status&&!(0,a.C9)(e.status))throw Error("Invalid status. Must be one of: active, inactive, graduated, suspended");let t=await a.ZP.put("/students/profile",e);return(0,a.Ro)(t)}async getGrades(){let e=await a.ZP.get("/students/grades");return(0,a.Ro)(e)}async getAttendance(e,t){if(!e||!t)throw Error("Start date and end date are required");if(!(0,a.cN)(e))throw Error("Invalid start date format. Use YYYY-MM-DD");if(!(0,a.cN)(t))throw Error("Invalid end date format. Use YYYY-MM-DD");let r=new Date(e),n=new Date(t);if(r>n)throw Error("Start date must be before or equal to end date");let i=await a.ZP.get("/students/attendance?startDate=".concat(e,"&endDate=").concat(t));return(0,a.Ro)(i)}async getFees(){let e=await a.ZP.get("/students/fees");return(0,a.Ro)(e)}async getTimetable(e){let t="/students/timetable";if(e){if("string"!=typeof e||0===e.trim().length)throw Error("Semester must be a non-empty string");t+="?semester=".concat(encodeURIComponent(e.trim()))}let r=await a.ZP.get(t);return(0,a.Ro)(r)}async getAttendanceSummary(e,t){let r=await this.getAttendance(e,t),a=r.length,n=r.filter(e=>"present"===e.status).length,i=r.filter(e=>"absent"===e.status).length,o=r.filter(e=>"late"===e.status).length;return{totalClasses:a,presentCount:n,absentCount:i,lateCount:o,attendancePercentage:a>0?Math.round(n/a*100):0,records:r}}async getCurrentSemesterAttendance(){let e=new Date().toISOString().split("T")[0],t=new Date(Date.now()-2592e6).toISOString().split("T")[0];return this.getAttendanceSummary(t,e)}async getOutstandingFeesSummary(){let e=await this.getFees(),t=e.fees.length,r=e.fees.filter(e=>"paid"===e.status).length,a=e.fees.filter(e=>"unpaid"===e.status).length,n=new Date,i=e.fees.filter(e=>"unpaid"===e.status&&new Date(e.due_date)<n).length;return{totalFees:t,paidFees:r,unpaidFees:a,totalOutstanding:e.totalOutstanding,overdueFees:i,fees:e}}};var s=o;let d=new class{async getProfile(){let e=await a.ZP.get("/teacher/profile");return(0,a.Ro)(e)}async updateProfile(e){if(e.email&&!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e.email))throw Error("Invalid email format");if(e.department_id&&!(0,a.fV)(e.department_id))throw Error("Department ID must be a positive integer");if(e.first_name&&"string"!=typeof e.first_name)throw Error("First name must be a string");if(e.last_name&&"string"!=typeof e.last_name)throw Error("Last name must be a string");let t=await a.ZP.put("/teacher/profile",e);return(0,a.Ro)(t)}async getClasses(){let e=await a.ZP.get("/teacher/classes");return(0,a.Ro)(e)}async markAttendance(e){if((0,a.MN)(e,["courseId","attendance","date"]),!(0,a.fV)(e.courseId))throw Error("Course ID must be a positive integer");if(!(0,a.cN)(e.date))throw Error("Invalid date format. Use YYYY-MM-DD");if(!Array.isArray(e.attendance)||0===e.attendance.length)throw Error("Attendance array is required and must not be empty");e.attendance.forEach((e,t)=>{if(!(0,a.fV)(e.studentId))throw Error("Invalid student ID at index ".concat(t,". Must be a positive integer"));if(!(0,a.dG)(e.status))throw Error("Invalid attendance status at index ".concat(t,". Must be one of: present, absent, late"));if(e.notes&&"string"!=typeof e.notes)throw Error("Notes at index ".concat(t," must be a string"))});let t=new Date(e.date),r=new Date;if(r.setHours(23,59,59,999),t>r)throw Error("Cannot mark attendance for future dates");let n=await a.ZP.post("/teacher/attendance",e);return(0,a.Ro)(n)}async enterGrades(e){if((0,a.MN)(e,["courseId","grades"]),!(0,a.fV)(e.courseId))throw Error("Course ID must be a positive integer");if(!Array.isArray(e.grades)||0===e.grades.length)throw Error("Grades array is required and must not be empty");e.grades.forEach((e,t)=>{if((0,a.MN)(e,["studentId","grade","semester","year"]),!(0,a.fV)(e.studentId))throw Error("Invalid student ID at index ".concat(t,". Must be a positive integer"));if("string"!=typeof e.grade||0===e.grade.trim().length)throw Error("Grade at index ".concat(t," must be a non-empty string"));if("string"!=typeof e.semester||0===e.semester.trim().length)throw Error("Semester at index ".concat(t," must be a non-empty string"));if(!(0,a.Y_)(e.year))throw Error("Invalid year at index ".concat(t,". Must be between 2000 and ").concat(new Date().getFullYear()+10));if(e.comments&&"string"!=typeof e.comments)throw Error("Comments at index ".concat(t," must be a string"))});let t=await a.ZP.post("/teacher/grades",e);return(0,a.Ro)(t)}async getTimetable(e){let t="/teacher/timetable";if(e){if("string"!=typeof e||0===e.trim().length)throw Error("Semester must be a non-empty string");t+="?semester=".concat(encodeURIComponent(e.trim()))}let r=await a.ZP.get(t);return(0,a.Ro)(r)}async getClassStudents(e){let t="/teacher/classes";if(e){if(!(0,a.fV)(e))throw Error("Course ID must be a positive integer");t+="/".concat(e)}t+="/students";let r=await a.ZP.get(t);return(0,a.Ro)(r)}async getAllStudents(){return this.getClassStudents()}async getCourseStudents(e){return this.getClassStudents(e)}async markBulkAttendance(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"present",a=arguments.length>3?arguments[3]:void 0,n=await this.getCourseStudents(e),i=n.map(e=>{let t=null==a?void 0:a.find(t=>t.studentId===e.id);return{studentId:e.id,status:(null==t?void 0:t.status)||r,notes:(null==t?void 0:t.notes)||""}});return this.markAttendance({courseId:e,attendance:i,date:t})}async enterBulkGrades(e,t,r,n){if(!(0,a.fV)(e))throw Error("Course ID must be a positive integer");if("string"!=typeof t||0===t.trim().length)throw Error("Semester must be a non-empty string");if(!(0,a.Y_)(r))throw Error("Invalid year. Must be between 2000 and ".concat(new Date().getFullYear()+10));if(!Array.isArray(n)||0===n.length)throw Error("Grades array is required and must not be empty");let i=n.map(e=>({studentId:e.studentId,grade:e.grade,semester:t,year:r,comments:e.comments||""}));return this.enterGrades({courseId:e,grades:i})}async getDaySchedule(e,t){if("number"!=typeof e||e<1||e>7)throw Error("Day of week must be a number between 1 (Monday) and 7 (Sunday)");let r=await this.getTimetable(t);return r.filter(t=>t.day_of_week===e)}async getTodaySchedule(e){let t=new Date,r=0===t.getDay()?7:t.getDay();return this.getDaySchedule(r,e)}};var l=d;let c=new class{async getDepartmentTeachers(){let e=await a.ZP.get("/hod/teachers");return(0,a.Ro)(e)}async approveActivity(e){if((0,a.MN)(e,["activityType","activityId","approve"]),"grade"!==e.activityType)throw Error('Invalid activity type. Currently only "grade" is supported');if(!(0,a.fV)(e.activityId))throw Error("Activity ID must be a positive integer");if("boolean"!=typeof e.approve)throw Error("Approve field must be a boolean");let t=await a.ZP.post("/hod/activities/approve",e);return(0,a.Ro)(t)}async generateReport(e,t){if("string"!=typeof e||0===e.trim().length)throw Error("Report type is required and must be a non-empty string");if(t){if(t.semester&&("string"!=typeof t.semester||0===t.semester.trim().length))throw Error("Semester must be a non-empty string");if(t.year&&!(0,a.Y_)(t.year))throw Error("Invalid year. Must be between 2000 and ".concat(new Date().getFullYear()+10))}let r=await a.ZP.post("/hod/reports/".concat(encodeURIComponent(e)),t||{});return(0,a.Ro)(r)}async manageCourses(e){if((0,a.MN)(e,["action","courseData"]),!["add","edit","delete"].includes(e.action))throw Error("Invalid action. Must be one of: add, edit, delete");if(("edit"===e.action||"delete"===e.action)&&(!e.courseData.id||!(0,a.fV)(e.courseData.id)))throw Error("Course ID is required for edit/delete actions and must be a positive integer");if("add"===e.action||"edit"===e.action){if((0,a.MN)(e.courseData,["course_code","name","credits"]),"string"!=typeof e.courseData.course_code||0===e.courseData.course_code.trim().length)throw Error("Course code must be a non-empty string");if("string"!=typeof e.courseData.name||0===e.courseData.name.trim().length)throw Error("Course name must be a non-empty string");if(!(0,a.fV)(e.courseData.credits))throw Error("Credits must be a positive number")}let t=await a.ZP.post("/hod/courses/manage",e);return(0,a.Ro)(t)}async approveTimetable(e){if((0,a.MN)(e,["timetableId","approve"]),!(0,a.fV)(e.timetableId))throw Error("Timetable ID must be a positive integer");if("boolean"!=typeof e.approve)throw Error("Approve field must be a boolean");let t=await a.ZP.post("/hod/timetable/approve",e);return(0,a.Ro)(t)}async getDepartmentStats(){let e=await a.ZP.get("/hod/stats");return(0,a.Ro)(e)}async getDepartmentTimetable(e){let t="/hod/timetable";if(e){if("string"!=typeof e||0===e.trim().length)throw Error("Semester must be a non-empty string");t+="?semester=".concat(encodeURIComponent(e.trim()))}let r=await a.ZP.get(t);return(0,a.Ro)(r)}async addCourse(e){return this.manageCourses({action:"add",courseData:e})}async editCourse(e){return this.manageCourses({action:"edit",courseData:e})}async deleteCourse(e){if(!(0,a.fV)(e))throw Error("Course ID must be a positive integer");return this.manageCourses({action:"delete",courseData:{id:e,course_code:"",name:"",credits:0}})}async approveGrade(e){return this.approveActivity({activityType:"grade",activityId:e,approve:!0})}async rejectGrade(e){return this.approveActivity({activityType:"grade",activityId:e,approve:!1})}async approveTimetableById(e){return this.approveTimetable({timetableId:e,approve:!0})}async rejectTimetable(e){return this.approveTimetable({timetableId:e,approve:!1})}async generateAttendanceReport(e){return this.generateReport("attendance",e)}async generateGradesReport(e){return this.generateReport("grades",e)}async getCurrentSemesterTimetable(){return this.getDepartmentTimetable("current")}async getDepartmentOverview(){let[e,t,r]=await Promise.all([this.getDepartmentTeachers(),this.getDepartmentStats(),this.getCurrentSemesterTimetable()]);return{teachers:e,stats:t,currentTimetable:r}}};var u=c;let m=new class{async getStudentFees(e){if(!(0,a.fV)(e))throw Error("Student ID must be a positive integer");let t=await a.ZP.get("/finance/students/".concat(e,"/fees"));return(0,a.Ro)(t)}async createFee(e){if((0,a.MN)(e,["studentId","amount","type","dueDate"]),!(0,a.fV)(e.studentId))throw Error("Student ID must be a positive integer");if(!(0,a.fV)(e.amount))throw Error("Amount must be a positive number");if("string"!=typeof e.type||0===e.type.trim().length)throw Error("Fee type must be a non-empty string");if(!(0,a.cN)(e.dueDate))throw Error("Invalid due date format. Use YYYY-MM-DD");let t=new Date(e.dueDate),r=new Date;if(r.setHours(0,0,0,0),t<r)throw Error("Due date cannot be in the past");if(e.description&&"string"!=typeof e.description)throw Error("Description must be a string");let n=await a.ZP.post("/finance/fees",e);return(0,a.Ro)(n)}async markFeePaid(e,t){if(!(0,a.fV)(e))throw Error("Fee ID must be a positive integer");if((0,a.MN)(t,["paymentMethod","transactionId"]),"string"!=typeof t.paymentMethod||0===t.paymentMethod.trim().length)throw Error("Payment method must be a non-empty string");if("string"!=typeof t.transactionId||0===t.transactionId.trim().length)throw Error("Transaction ID must be a non-empty string");if(t.paymentDate){if(!(0,a.cN)(t.paymentDate))throw Error("Invalid payment date format. Use YYYY-MM-DD");let e=new Date(t.paymentDate),r=new Date;if(r.setHours(23,59,59,999),e>r)throw Error("Payment date cannot be in the future")}let r=await a.ZP.put("/finance/fees/".concat(e,"/pay"),t);return(0,a.Ro)(r)}async generateInvoice(e){if(!(0,a.fV)(e))throw Error("Student ID must be a positive integer");let t=await a.ZP.get("/finance/students/".concat(e,"/invoice"));return(0,a.Ro)(t)}async getFinancialReports(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(e.reportType&&("string"!=typeof e.reportType||0===e.reportType.trim().length))throw Error("Report type must be a non-empty string");if(e.startDate&&!(0,a.cN)(e.startDate))throw Error("Invalid start date format. Use YYYY-MM-DD");if(e.endDate&&!(0,a.cN)(e.endDate))throw Error("Invalid end date format. Use YYYY-MM-DD");if(e.startDate&&e.endDate){let t=new Date(e.startDate),r=new Date(e.endDate);if(t>r)throw Error("Start date must be before or equal to end date")}let t=await a.ZP.get("/finance/reports",{params:e});return(0,a.Ro)(t)}async getPaymentHistory(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(!(0,a.fV)(e))throw Error("Student ID must be a positive integer");if(!(0,a.fV)(t)||t>100)throw Error("Limit must be a positive integer not exceeding 100");if("number"!=typeof r||r<0)throw Error("Offset must be a non-negative integer");let n=await a.ZP.get("/finance/students/".concat(e,"/payments"),{params:{limit:t,offset:r}});return(0,a.Ro)(n)}async getOverdueFees(){let e=await a.ZP.get("/finance/overdue");return(0,a.Ro)(e)}async getStudentFeesSummary(e){let t=await this.getStudentFees(e),r=t.length,a=t.filter(e=>"paid"===e.status).length,n=t.filter(e=>"unpaid"===e.status).length,i=t.reduce((e,t)=>e+t.amount,0),o=t.filter(e=>"paid"===e.status).reduce((e,t)=>e+t.amount,0),s=new Date,d=t.filter(e=>"unpaid"===e.status&&new Date(e.due_date)<s).length;return{fees:t,totalFees:r,paidFees:a,unpaidFees:n,totalAmount:i,paidAmount:o,outstandingAmount:i-o,overdueFees:d}}async getFinancialOverview(){let[e,t]=await Promise.all([this.getOverdueFees(),this.getFinancialReports()]),r=e.length,a=e.reduce((e,t)=>e+t.amount,0);return{overdueFees:e,totalOverdue:r,totalOverdueAmount:a,reports:t}}async createTuitionFee(e,t,r,a){return this.createFee({studentId:e,amount:t,type:"Tuition",dueDate:r,description:a||"Tuition fee"})}async createLibraryFee(e,t,r,a){return this.createFee({studentId:e,amount:t,type:"Library",dueDate:r,description:a||"Library fee"})}async createExaminationFee(e,t,r,a){return this.createFee({studentId:e,amount:t,type:"Examination",dueDate:r,description:a||"Examination fee"})}async markFeePaidCash(e,t,r){return this.markFeePaid(e,{paymentMethod:"Cash",transactionId:t,paymentDate:r})}async markFeePaidBankTransfer(e,t,r){return this.markFeePaid(e,{paymentMethod:"Bank Transfer",transactionId:t,paymentDate:r})}async markFeePaidCard(e,t,r){return this.markFeePaid(e,{paymentMethod:"Card",transactionId:t,paymentDate:r})}};var g=m,p=r(9993);let f=new class{async getNotifications(e,t){let r="/notifications";if(void 0!==e||void 0!==t){let n=e||1,i=t||10;if(!(0,a.fV)(n))throw Error("Page must be a positive integer");if(!(0,a.fV)(i)||i>100)throw Error("Limit must be a positive integer not exceeding 100");r+="/".concat(n,"/").concat(i)}let n=await a.ZP.get(r);return(0,a.Ro)(n)}async markAsRead(e){if(!(0,a.fV)(e))throw Error("Notification ID must be a positive integer");let t=await a.ZP.put("/notifications/".concat(e,"/read"));return(0,a.Ro)(t)}async markAllAsRead(){let e=await a.ZP.put("/notifications/read-all");return(0,a.Ro)(e)}async sendToUsers(e){if((0,a.MN)(e,["recipientIds","type","title","message"]),!Array.isArray(e.recipientIds)||0===e.recipientIds.length)throw Error("Recipient IDs must be a non-empty array");if(e.recipientIds.forEach((e,t)=>{if(!(0,a.fV)(e))throw Error("Recipient ID at index ".concat(t," must be a positive integer"))}),"string"!=typeof e.type||0===e.type.trim().length)throw Error("Type must be a non-empty string");if("string"!=typeof e.title||0===e.title.trim().length)throw Error("Title must be a non-empty string");if("string"!=typeof e.message||0===e.message.trim().length)throw Error("Message must be a non-empty string");if(e.data&&"object"!=typeof e.data)throw Error("Data field must be an object");let t=await a.ZP.post("/notifications/send/user",e);return(0,a.Ro)(t)}async sendToDepartment(e){if((0,a.MN)(e,["departmentId","type","title","message"]),!(0,a.fV)(e.departmentId))throw Error("Department ID must be a positive integer");if(e.role&&"string"!=typeof e.role)throw Error("Role must be a string");if("string"!=typeof e.type||0===e.type.trim().length)throw Error("Type must be a non-empty string");if("string"!=typeof e.title||0===e.title.trim().length)throw Error("Title must be a non-empty string");if("string"!=typeof e.message||0===e.message.trim().length)throw Error("Message must be a non-empty string");if(e.data&&"object"!=typeof e.data)throw Error("Data field must be an object");let t=await a.ZP.post("/notifications/send/department",e);return(0,a.Ro)(t)}async sendToCourse(e){if((0,a.MN)(e,["courseId","type","title","message"]),!(0,a.fV)(e.courseId))throw Error("Course ID must be a positive integer");if("string"!=typeof e.type||0===e.type.trim().length)throw Error("Type must be a non-empty string");if("string"!=typeof e.title||0===e.title.trim().length)throw Error("Title must be a non-empty string");if("string"!=typeof e.message||0===e.message.trim().length)throw Error("Message must be a non-empty string");if(e.data&&"object"!=typeof e.data)throw Error("Data field must be an object");let t=await a.ZP.post("/notifications/send/course",e);return(0,a.Ro)(t)}async getUnreadCount(){let e=await this.getNotifications();return e.filter(e=>!e.is_read).length}async getRecentNotifications(){return this.getNotifications(1,10)}async sendDepartmentAnnouncement(e,t,r,a){return this.sendToDepartment({departmentId:e,role:a,type:"announcement",title:t,message:r})}async sendAssignmentNotification(e,t,r,a){return this.sendToCourse({courseId:e,type:"assignment",title:t,message:r,data:a})}async sendExamNotification(e,t,r,a){return this.sendToCourse({courseId:e,type:"exam",title:t,message:r,data:a})}async sendGradeNotification(e,t,r,a){return this.sendToUsers({recipientIds:e,type:"grade",title:t,message:r,data:a})}async sendFeeReminder(e,t,r,a){return this.sendToUsers({recipientIds:e,type:"fee_reminder",title:t,message:r,data:a})}async sendSystemAlert(e,t,r,a){return this.sendToUsers({recipientIds:e,type:"system_alert",title:t,message:r,data:a})}async markMultipleAsRead(e){if(!Array.isArray(e)||0===e.length)throw Error("Notification IDs must be a non-empty array");let t=await Promise.allSettled(e.map(e=>this.markAsRead(e))),r=t.filter(e=>"fulfilled"===e.status).length,a=t.filter(e=>"rejected"===e.status).length,n=t.filter(e=>"rejected"===e.status).map(e=>e.reason.message);return{success:r,failed:a,errors:n}}async getNotificationsByType(e,t,r){if("string"!=typeof e||0===e.trim().length)throw Error("Type must be a non-empty string");let a=await this.getNotifications(t,r);return a.filter(t=>t.type===e)}async getUnreadNotifications(e,t){let r=await this.getNotifications(e,t);return r.filter(e=>!e.is_read)}};new class{isAuthenticated(){return(0,a.$8)()}getToken(){return(0,a.bW)()}clearAuth(){(0,a.Rn)()}handleError(e){return(0,a.e$)(e)}formatDate(e){return(0,a.DB)(e)}pageToOffset(e,t){return(0,a.z$)(e,t)}validateEmail(e){return(0,a.oH)(e)}validateDate(e){return(0,a.cN)(e)}validatePositiveNumber(e){return(0,a.fV)(e)}validateYear(e){return(0,a.Y_)(e)}validateAttendanceStatus(e){return(0,a.dG)(e)}validateUserRole(e){return(0,a.ap)(e)}validateStudentStatus(e){return(0,a.C9)(e)}constructor(){this.auth=i,this.student=s,this.teacher=l,this.hod=u,this.finance=g,this.admin=p.ZP,this.notifications=f}}},2352:function(){}},function(e){var __webpack_exec__=function(t){return e(e.s=t)};e.O(0,[1216,179],function(){return __webpack_exec__(1118),__webpack_exec__(9974)}),_N_E=e.O()}]);