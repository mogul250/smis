exports.id=8397,exports.ids=[8397],exports.modules={9180:(e,t,r)=>{"use strict";r.d(t,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var a=r(997);r(6689);var n=r(1664),s=r.n(n),i=r(4549);let __WEBPACK_DEFAULT_EXPORT__=({children:e,variant:t="primary",size:r="md",loading:n=!1,disabled:o=!1,className:d="",icon:l,iconPosition:u="left",href:m,...c})=>{let p=`inline-flex items-center justify-center font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed ${{primary:"bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500",secondary:"bg-gray-200 text-gray-900 hover:bg-gray-300 focus:ring-gray-500",success:"bg-green-600 text-white hover:bg-green-700 focus:ring-green-500",warning:"bg-orange-500 text-white hover:bg-orange-600 focus:ring-orange-500",danger:"bg-red-600 text-white hover:bg-red-700 focus:ring-red-500",outline:"border border-gray-300 bg-white text-gray-700 hover:bg-gray-50 focus:ring-blue-500",ghost:"text-gray-700 hover:bg-gray-100 focus:ring-gray-500"}[t]} ${{sm:"px-3 py-1.5 text-sm",md:"px-4 py-2 text-sm",lg:"px-6 py-3 text-base",xl:"px-8 py-4 text-lg"}[r]} ${d}`,g=(0,a.jsxs)(a.Fragment,{children:[n&&a.jsx(i.Z,{size:"sm",color:"outline"===t||"ghost"===t?"gray":"white",className:"mr-2"}),l&&"left"===u&&!n&&a.jsx(l,{className:"w-4 h-4 mr-2"}),e,l&&"right"===u&&!n&&a.jsx(l,{className:"w-4 h-4 ml-2"})]});return m?a.jsx(s(),{href:m,className:p,children:g}):a.jsx("button",{className:p,disabled:o||n,...c,children:g})}},4105:(e,t,r)=>{"use strict";r.d(t,{Z:()=>n});var a=r(997);r(6689);let Card=({children:e,className:t="",padding:r="default",shadow:n="default",hover:s=!1,...i})=>a.jsx("div",{className:`bg-white rounded-lg border border-gray-200 ${{none:"",sm:"p-4",default:"p-6",lg:"p-8"}[r]} ${{none:"",sm:"shadow-sm",default:"shadow-sm",md:"shadow-md",lg:"shadow-lg"}[n]} ${s?"hover:shadow-md transition-shadow duration-200":""} ${t}`,...i,children:e});Card.Header=({children:e,className:t="",...r})=>a.jsx("div",{className:`border-b border-gray-200 pb-4 mb-4 ${t}`,...r,children:e}),Card.Title=({children:e,className:t="",...r})=>a.jsx("h3",{className:`text-lg font-semibold text-gray-900 ${t}`,...r,children:e}),Card.Content=({children:e,className:t="",...r})=>a.jsx("div",{className:t,...r,children:e}),Card.Footer=({children:e,className:t="",...r})=>a.jsx("div",{className:`border-t border-gray-200 pt-4 mt-4 ${t}`,...r,children:e});let n=Card},9060:(e,t,r)=>{"use strict";r.d(t,{ZP:()=>l});var a=r(997),n=r(6689),s=r.n(n),i=r(6893),o=r(9180),d=r(4105);let ErrorBoundary=class ErrorBoundary extends s().Component{constructor(e){super(e),this.generateEventId=()=>"error_"+Date.now()+"_"+Math.random().toString(36).substr(2,9),this.reportError=async(e,t)=>{try{await fetch("/api/errors",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:e.message,stack:e.stack,componentStack:t.componentStack,userAgent:navigator.userAgent,url:window.location.href,timestamp:new Date().toISOString(),eventId:this.state.eventId})})}catch(e){}},this.handleRetry=()=>{this.setState({hasError:!1,error:null,errorInfo:null,eventId:null})},this.handleGoHome=()=>{window.location.href="/dashboard"},this.state={hasError:!1,error:null,errorInfo:null,eventId:null}}static getDerivedStateFromError(e){return{hasError:!0}}componentDidCatch(e,t){this.setState({error:e,errorInfo:t,eventId:this.generateEventId()}),this.reportError(e,t)}render(){return this.state.hasError?this.props.fallback?this.props.fallback(this.state.error,this.handleRetry):a.jsx("div",{className:"min-h-screen bg-gray-50 flex items-center justify-center p-4",children:a.jsx(d.Z,{className:"max-w-lg w-full",children:(0,a.jsxs)(d.Z.Content,{className:"text-center py-8",children:[a.jsx("div",{className:"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4",children:a.jsx(i.BJv,{className:"w-8 h-8 text-red-600"})}),a.jsx("h1",{className:"text-xl font-semibold text-gray-900 mb-2",children:"Something went wrong"}),a.jsx("p",{className:"text-gray-600 mb-6",children:"We're sorry, but something unexpected happened. Our team has been notified."}),!1,this.state.eventId&&(0,a.jsxs)("p",{className:"text-xs text-gray-500 mb-6",children:["Error ID: ",this.state.eventId]}),(0,a.jsxs)("div",{className:"flex flex-col sm:flex-row gap-3 justify-center",children:[a.jsx(o.Z,{variant:"primary",icon:i.Bw1,onClick:this.handleRetry,children:"Try Again"}),a.jsx(o.Z,{variant:"outline",icon:i.m6D,onClick:this.handleGoHome,children:"Go to Dashboard"})]})]})})}):this.props.children}};let l=ErrorBoundary},4549:(e,t,r)=>{"use strict";r.d(t,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var a=r(997);r(6689);let __WEBPACK_DEFAULT_EXPORT__=({size:e="md",color:t="primary",className:r=""})=>a.jsx("div",{className:`animate-spin rounded-full border-2 border-t-transparent ${{sm:"h-4 w-4",md:"h-6 w-6",lg:"h-8 w-8",xl:"h-12 w-12"}[e]} ${{primary:"border-blue-600",white:"border-white",gray:"border-gray-400"}[t]} ${r}`,role:"status","aria-label":"Loading",children:a.jsx("span",{className:"sr-only",children:"Loading..."})})},8786:(e,t,r)=>{"use strict";r.a(e,async(e,a)=>{try{r.d(t,{Ho:()=>AuthProvider,ZP:()=>m});var n=r(997),s=r(6689),i=r(8303),o=e([i]);i=(o.then?(await o)():o)[0];let d={user:null,isAuthenticated:!1,isLoading:!0,error:null},l={LOGIN_START:"LOGIN_START",LOGIN_SUCCESS:"LOGIN_SUCCESS",LOGIN_FAILURE:"LOGIN_FAILURE",LOGOUT:"LOGOUT",LOAD_USER:"LOAD_USER",CLEAR_ERROR:"CLEAR_ERROR"},authReducer=(e,t)=>{switch(t.type){case l.LOGIN_START:return{...e,isLoading:!0,error:null};case l.LOGIN_SUCCESS:return{...e,user:t.payload.user,isAuthenticated:!0,isLoading:!1,error:null};case l.LOGIN_FAILURE:return{...e,user:null,isAuthenticated:!1,isLoading:!1,error:t.payload.error};case l.LOGOUT:return{...e,user:null,isAuthenticated:!1,isLoading:!1,error:null};case l.LOAD_USER:return{...e,user:t.payload.user,isAuthenticated:!!t.payload.user,isLoading:!1};case l.CLEAR_ERROR:return{...e,error:null};default:return e}},u=(0,s.createContext)(),AuthProvider=({children:e})=>{let[t,r]=(0,s.useReducer)(authReducer,d);(0,s.useEffect)(()=>{loadUser()},[]);let loadUser=async()=>{try{let e=localStorage.getItem("authToken");if(e){let e=await i.kv.getProfile();r({type:l.LOAD_USER,payload:{user:e.data.user}})}else r({type:l.LOAD_USER,payload:{user:null}})}catch(e){localStorage.removeItem("authToken"),r({type:l.LOAD_USER,payload:{user:null}})}},login=async(e,t=!1)=>{r({type:l.LOGIN_START});try{let a=t?await i.kv.studentLogin(e):await i.kv.login(e),{user:n,token:s}=a;return localStorage.setItem("authToken",s),r({type:l.LOGIN_SUCCESS,payload:{user:n}}),{success:!0,user:n}}catch(t){let e=t.response?.data?.message||t.message||"Login failed";return r({type:l.LOGIN_FAILURE,payload:{error:e}}),{success:!1,error:e}}},logout=async()=>{try{await i.kv.logout()}catch(e){}finally{localStorage.removeItem("authToken"),r({type:l.LOGOUT})}},register=async e=>{r({type:l.LOGIN_START});try{return await i.kv.register(e),{success:!0}}catch(t){let e=t.response?.data?.message||"Registration failed";return r({type:l.LOGIN_FAILURE,payload:{error:e}}),{success:!1,error:e}}},a={...t,login,logout,register,clearError:()=>{r({type:l.CLEAR_ERROR})},loadUser};return n.jsx(u.Provider,{value:a,children:e})},m=u;a()}catch(e){a(e)}})},4514:(e,t,r)=>{"use strict";r.d(t,{jZ:()=>useMemoryMonitor,p$:()=>useWebVitalsMonitor});var a=r(6689);let useMemoryMonitor=(e=3e4)=>{(0,a.useEffect)(()=>{if(!("memory"in performance))return;let checkMemory=()=>{let e=performance.memory;e.usedJSHeapSize,e.totalJSHeapSize,e.jsHeapSizeLimit,e.usedJSHeapSize,e.jsHeapSizeLimit},t=setInterval(checkMemory,e);return checkMemory(),()=>clearInterval(t)},[e])},useWebVitalsMonitor=()=>{(0,a.useEffect)(()=>{},[])}},8397:(e,t,r)=>{"use strict";r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var n=r(997);r(108);var s=r(8786),i=r(9060),o=r(6689),d=r(4514),l=r(3612),u=r(3231),m=e([s]);s=(m.then?(await m)():m)[0];let __WEBPACK_DEFAULT_EXPORT__=function({Component:e,pageProps:t}){return(0,d.p$)(),(0,d.jZ)(),(0,o.useEffect)(()=>{(0,l.vl)(),(0,u.$J)(),(0,u.Er)(),(0,u.Fz)()},[]),n.jsx(i.ZP,{children:n.jsx(s.Ho,{children:n.jsx(e,{...t})})})};a()}catch(e){a(e)}})},9993:(e,t,r)=>{"use strict";r.a(e,async(e,a)=>{try{r.d(t,{Ho:()=>getCourses,Os:()=>getTeachers,TK:()=>setupTimetable,ZP:()=>o,e3:()=>updateTimetableSlot,k:()=>getClasses,nE:()=>deleteTimetableSlot,zk:()=>getTimetableSlot});var n=r(1265),s=e([n]);n=(s.then?(await s)():s)[0];let i=new class{async createUser(e){if((0,n.MN)(e,["firstName","lastName","email","password","role"]),!(0,n.oH)(e.email))throw Error("Invalid email format");if(e.password.length<6)throw Error("Password must be at least 6 characters long");if(!(0,n.ap)(e.role))throw Error("Invalid role. Must be one of: student, teacher, hod, finance, admin");if("student"===e.role&&!e.departmentId)throw Error("Department ID is required for students");if(e.departmentId&&!(0,n.fV)(e.departmentId))throw Error("Department ID must be a positive integer");if(e.additionalData){if(e.additionalData.enrollmentYear&&!(0,n.fV)(e.additionalData.enrollmentYear))throw Error("Enrollment year must be a positive integer");if(e.additionalData.enrollmentDate&&!/^\d{4}-\d{2}-\d{2}$/.test(e.additionalData.enrollmentDate))throw Error("Invalid enrollment date format. Use YYYY-MM-DD")}let t=await n.ZP.post("/admin/users",e);return(0,n.Ro)(t)}async getAllUsers(e=1,t=10,r){if(!(0,n.fV)(e))throw Error("Page must be a positive integer");if(!(0,n.fV)(t)||t>100)throw Error("Limit must be a positive integer not exceeding 100");let a=(0,n.z$)(e,t),s=`/admin/users/${a}/${t}`,i=new URLSearchParams;if(r?.role){if(!(0,n.ap)(r.role))throw Error("Invalid role filter");i.append("role",r.role)}if(r?.departmentId){if(!(0,n.fV)(r.departmentId))throw Error("Department ID filter must be a positive integer");i.append("departmentId",r.departmentId.toString())}if(r?.search){if("string"!=typeof r.search||0===r.search.trim().length)throw Error("Search filter must be a non-empty string");i.append("search",r.search.trim())}i.toString()&&(s+=`?${i.toString()}`);let o=await n.ZP.get(s);return(0,n.Ro)(o)}async getUserById(e){if(!(0,n.fV)(e))throw Error("User ID must be a positive integer");let t=await n.ZP.get(`/admin/users/by-id/${e}`);return(0,n.Ro)(t)}async updateUserStatus(e,t){if(!(0,n.fV)(e))throw Error("User ID must be a positive integer");let r=["active","inactive","suspended","pending"];if(!r.includes(t))throw Error(`Invalid status. Must be one of: ${r.join(", ")}`);let a=await n.ZP.put(`/admin/users/${e}`,{status:t});return(0,n.Ro)(a)}async updateUser(e,t){if(!(0,n.fV)(e))throw Error("User ID must be a positive integer");if(t.email&&!(0,n.oH)(t.email))throw Error("Invalid email format");if(t.role&&!(0,n.ap)(t.role))throw Error("Invalid role. Must be one of: student, teacher, hod, finance, admin");if(t.departmentId&&!(0,n.fV)(t.departmentId))throw Error("Department ID must be a positive integer");if(t.firstName&&("string"!=typeof t.firstName||0===t.firstName.trim().length))throw Error("First name must be a non-empty string");if(t.lastName&&("string"!=typeof t.lastName||0===t.lastName.trim().length))throw Error("Last name must be a non-empty string");let r=await n.ZP.put(`/admin/users/${e}`,t);return(0,n.Ro)(r)}async deleteUser(e){if(!(0,n.fV)(e))throw Error("User ID must be a positive integer");let t=await n.ZP.delete(`/admin/users/${e}`);return(0,n.Ro)(t)}async getAllStudents(e=1,t=10){if(!(0,n.fV)(e))throw Error("Page must be a positive integer");if(!(0,n.fV)(t)||t>100)throw Error("Limit must be a positive integer not exceeding 100");let r=(0,n.z$)(e,t),a=await n.ZP.get(`/admin/students/${r}/${t}`);return(0,n.Ro)(a)}async createStudent(e){if((0,n.MN)(e,["firstName","lastName","email","studentId","departmentId"]),!(0,n.oH)(e.email))throw Error("Invalid email format");if(!(0,n.fV)(e.departmentId))throw Error("Department ID must be a positive integer");let t=await n.ZP.post("/admin/students",e);return(0,n.Ro)(t)}async updateStudent(e,t){if(!(0,n.fV)(e))throw Error("Student ID must be a positive integer");if(t.email&&!(0,n.oH)(t.email))throw Error("Invalid email format");if(t.departmentId&&!(0,n.fV)(t.departmentId))throw Error("Department ID must be a positive integer");let r=await n.ZP.put(`/admin/students/${e}`,t);return(0,n.Ro)(r)}async updateStudentStatus(e,t){if(!(0,n.fV)(e))throw Error("Student ID must be a positive integer");let r=["active","inactive","suspended","graduated"];if(!r.includes(t))throw Error(`Invalid status. Must be one of: ${r.join(", ")}`);let a=await n.ZP.put(`/admin/students/${e}/status`,{status:t});return(0,n.Ro)(a)}async deleteStudent(e){if(!(0,n.fV)(e))throw Error("Student ID must be a positive integer");let t=await n.ZP.delete(`/admin/students/${e}`);return(0,n.Ro)(t)}async getAllDepartments(e=1,t=10){if(!(0,n.fV)(e))throw Error("Page must be a positive integer");if(!(0,n.fV)(t)||t>100)throw Error("Limit must be a positive integer not exceeding 100");let r=(0,n.z$)(e,t),a=await n.ZP.get(`/admin/departments/${r}/${t}`);return(0,n.Ro)(a)}async getDepartmentById(e){if(!(0,n.fV)(e))throw Error("Department ID must be a positive integer");let t=await n.ZP.get(`/admin/departments/${e}`);return(0,n.Ro)(t)}async createDepartment(e){if((0,n.MN)(e,["name","code"]),"string"!=typeof e.name||0===e.name.trim().length)throw Error("Department name must be a non-empty string");if("string"!=typeof e.code||0===e.code.trim().length)throw Error("Department code must be a non-empty string");if(e.head_id&&!(0,n.fV)(e.head_id))throw Error("Head ID must be a positive integer");if(e.description&&"string"!=typeof e.description)throw Error("Description must be a string");let t=await n.ZP.post("/admin/departments",e);return(0,n.Ro)(t)}async updateDepartment(e,t){if(!(0,n.fV)(e))throw Error("Department ID must be a positive integer");if(t.name&&("string"!=typeof t.name||0===t.name.trim().length))throw Error("Department name must be a non-empty string");if(t.code&&("string"!=typeof t.code||0===t.code.trim().length))throw Error("Department code must be a non-empty string");if(t.head_id&&!(0,n.fV)(t.head_id))throw Error("Head ID must be a positive integer");if(t.description&&"string"!=typeof t.description)throw Error("Description must be a string");let r=await n.ZP.put(`/admin/departments/${e}`,t);return(0,n.Ro)(r)}async deleteDepartment(e){if(!(0,n.fV)(e))throw Error("Department ID must be a positive integer");let t=await n.ZP.delete(`/admin/departments/${e}`);return(0,n.Ro)(t)}async getAllCourses(e=1,t=10,r){if(!(0,n.fV)(e))throw Error("Page must be a positive integer");if(!(0,n.fV)(t))throw Error("Limit must be a positive integer");let a=(0,n.z$)(e,t),s=new URLSearchParams;r?.search&&s.append("search",r.search),r?.semester&&s.append("semester",r.semester),r?.department&&s.append("department",r.department);let i=s.toString(),o=`/admin/courses/all/${a}/${t}${i?`?${i}`:""}`,d=await n.ZP.get(o);return(0,n.Ro)(d)}async getCourses(){let e=await n.ZP.get("/admin/courses");return(0,n.Ro)(e)}async getClasses(){let e=await n.ZP.get("/admin/classes");return(0,n.Ro)(e)}async getTeachers(e=1,t=100){if(!(0,n.fV)(e))throw Error("Page must be a positive integer");if(!(0,n.fV)(t))throw Error("Limit must be a positive integer");let r=(0,n.z$)(e,t),a=await n.ZP.get(`/admin/users/${r}/${t}?role=teacher`);return(0,n.Ro)(a)}async getTimetableSlot(e){let t=await n.ZP.get(`/admin/timetable/${e}`);return(0,n.Ro)(t)}async updateTimetableSlot(e,t){let r=await n.ZP.put(`/admin/timetable/${e}`,t);return(0,n.Ro)(r)}async deleteTimetableSlot(e){let t=await n.ZP.delete(`/admin/timetable/${e}`);return(0,n.Ro)(t)}async manageCourses(e){if((0,n.MN)(e,["action","courseData"]),!["add","edit","delete"].includes(e.action))throw Error("Invalid action. Must be one of: add, edit, delete");if(("edit"===e.action||"delete"===e.action)&&(!e.courseData.id||!(0,n.fV)(e.courseData.id)))throw Error("Course ID is required for edit/delete actions and must be a positive integer");if("add"===e.action||"edit"===e.action){if((0,n.MN)(e.courseData,["course_code","name","credits"]),"string"!=typeof e.courseData.course_code||0===e.courseData.course_code.trim().length)throw Error("Course code must be a non-empty string");if("string"!=typeof e.courseData.name||0===e.courseData.name.trim().length)throw Error("Course name must be a non-empty string");if(!(0,n.fV)(e.courseData.credits))throw Error("Credits must be a positive number")}let t=await n.ZP.post("/admin/courses/manage",e);return(0,n.Ro)(t)}async manageAcademicCalendar(e){if((0,n.MN)(e,["eventName","eventDate","eventType"]),"string"!=typeof e.eventName||0===e.eventName.trim().length)throw Error("Event name must be a non-empty string");if(!/^\d{4}-\d{2}-\d{2}$/.test(e.eventDate))throw Error("Invalid event date format. Use YYYY-MM-DD");if("string"!=typeof e.eventType||0===e.eventType.trim().length)throw Error("Event type must be a non-empty string");if(e.description&&"string"!=typeof e.description)throw Error("Description must be a string");let t=await n.ZP.post("/admin/calendar",e);return(0,n.Ro)(t)}async getAcademicCalendar(){let e=await n.ZP.get("/admin/calendar");return(0,n.Ro)(e)}async updateAcademicEvent(e,t){if(!(0,n.fV)(e))throw Error("Event ID must be a positive integer");(0,n.MN)(t,["eventName","eventDate","eventType"]);let r=await n.ZP.put(`/admin/calendar/${e}`,t);return(0,n.Ro)(r)}async deleteAcademicEvent(e){if(!(0,n.fV)(e))throw Error("Event ID must be a positive integer");let t=await n.ZP.delete(`/admin/calendar/${e}`);return(0,n.Ro)(t)}async setupTimetable(e){if((0,n.MN)(e,["action","timetableData"]),!["add","update","delete"].includes(e.action))throw Error("Invalid action. Must be one of: add, update, delete");let t=e.timetableData;if((0,n.MN)(t,["course_id","teacher_id","class_id","day_of_week","start_time","end_time"]),!(0,n.fV)(t.course_id))throw Error("Course ID must be a positive integer");if(!(0,n.fV)(t.teacher_id))throw Error("Teacher ID must be a positive integer");if(!(0,n.fV)(t.class_id))throw Error("Class ID must be a positive integer");if("number"!=typeof t.day_of_week||t.day_of_week<1||t.day_of_week>7)throw Error("Day of week must be a number between 1 (Monday) and 7 (Sunday)");let r=/^([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/;if(!r.test(t.start_time))throw Error("Invalid start time format. Use HH:MM:SS");if(!r.test(t.end_time))throw Error("Invalid end time format. Use HH:MM:SS");let a=new Date(`1970-01-01T${t.start_time}`),s=new Date(`1970-01-01T${t.end_time}`);if(a>=s)throw Error("Start time must be before end time");let i=await n.ZP.post("/admin/timetable",e);return(0,n.Ro)(i)}async getTimetable(e){let t="/admin/timetable";if(e){let r=new URLSearchParams;if(e.semester){if("string"!=typeof e.semester||0===e.semester.trim().length)throw Error("Semester must be a non-empty string");r.append("semester",e.semester)}if(e.department){if("string"!=typeof e.department||0===e.department.trim().length)throw Error("Department must be a non-empty string");r.append("department",e.department)}r.toString()&&(t+=`?${r.toString()}`)}let r=await n.ZP.get(t);return(0,n.Ro)(r)}async getSystemStats(){let e=await n.ZP.get("/admin/stats");return(0,n.Ro)(e)}},getCourses=()=>i.getCourses(),getClasses=()=>i.getClasses(),getTeachers=(e,t)=>i.getTeachers(e,t),getTimetableSlot=e=>i.getTimetableSlot(e),updateTimetableSlot=(e,t)=>i.updateTimetableSlot(e,t),deleteTimetableSlot=e=>i.deleteTimetableSlot(e),setupTimetable=e=>i.setupTimetable(e),o=i;a()}catch(e){a(e)}})},6870:(e,t,r)=>{"use strict";r.a(e,async(e,a)=>{try{r.d(t,{ZP:()=>o});var n=r(1265),s=e([n]);n=(s.then?(await s)():s)[0];let i=new class{async login(e){if((0,n.MN)(e,["email","password"]),!(0,n.oH)(e.email))throw Error("Invalid email format");try{let t=await n.ZP.post("/auth/login",e),r=(0,n.Ro)(t);return r.token&&(0,n.uB)(r.token),r}catch(e){throw(0,n.Rn)(),e}}async studentLogin(e){if((0,n.MN)(e,["email","password"]),!(0,n.oH)(e.email))throw Error("Invalid email format");try{let t=await n.ZP.post("/auth/student/login",e),r=(0,n.Ro)(t);return r.token&&(0,n.uB)(r.token),r}catch(e){throw(0,n.Rn)(),e}}async logout(){try{let e=await n.ZP.post("/auth/logout"),t=(0,n.Ro)(e);return(0,n.Rn)(),t}catch(e){throw(0,n.Rn)(),e}}async getProfile(){try{let e=await n.ZP.get("/auth/profile");return(0,n.Ro)(e)}catch(e){throw 401===e.status&&(0,n.Rn)(),e}}async register(e){if((0,n.MN)(e,["first_name","last_name","email","password","role"]),!(0,n.oH)(e.email))throw Error("Invalid email format");if(e.password.length<6)throw Error("Password must be at least 6 characters long");if(!["teacher","hod","finance","admin"].includes(e.role))throw Error("Invalid role. Must be one of: teacher, hod, finance, admin");let t=await n.ZP.post("/auth/register",e);return(0,n.Ro)(t)}async forgotPassword(e){if(!e)throw Error("Email is required");if(!(0,n.oH)(e))throw Error("Invalid email format");let t=await n.ZP.post("/auth/forgot-password",{email:e});return(0,n.Ro)(t)}async resetPassword(e,t){if(!e)throw Error("Reset token is required");if(!t)throw Error("New password is required");if(t.length<6)throw Error("Password must be at least 6 characters long");let r=await n.ZP.post("/auth/reset-password",{token:e,newPassword:t});return(0,n.Ro)(r)}isAuthenticated(){return!1}getToken(){return null}clearAuth(){(0,n.Rn)()}},o=i;a()}catch(e){a(e)}})},1265:(e,t,r)=>{"use strict";r.a(e,async(e,a)=>{try{r.d(t,{$8:()=>isAuthenticated,C9:()=>validateStudentStatus,DB:()=>formatDateForApi,MN:()=>validateRequiredFields,Rn:()=>clearAuthToken,Ro:()=>handleApiResponse,Y_:()=>validateYear,ZP:()=>o,ap:()=>validateUserRole,bW:()=>getAuthToken,cN:()=>validateDateFormat,dG:()=>validateAttendanceStatus,e$:()=>getErrorMessage,fV:()=>validatePositiveNumber,oH:()=>validateEmail,uB:()=>setAuthToken,z$:()=>pageToOffset});var n=r(9648),s=e([n]);n=(s.then?(await s)():s)[0];let i=n.default.create({baseURL:"http://localhost:5000/api",timeout:3e4,headers:{"Content-Type":"application/json"}});i.interceptors.request.use(e=>e,e=>Promise.reject(e)),i.interceptors.response.use(e=>e,e=>{let t={message:"An unexpected error occurred",status:e.response?.status,code:e.code,details:e.response?.data};if(e.response){let{status:r,data:a}=e.response;switch(t.message=a?.message||`HTTP ${r} Error`,t.status=r,r){case 401:t.message="Authentication required. Please log in again.";break;case 403:t.message="You do not have permission to perform this action.";break;case 404:t.message="The requested resource was not found.";break;case 409:t.message=a?.message||"A conflict occurred. The data may already exist.";break;case 422:t.message=a?.message||"Validation failed. Please check your input.";break;case 429:t.message="Too many requests. Please try again later.";break;case 500:t.message="Internal server error. Please try again later.";break;case 502:case 503:case 504:t.message="Service temporarily unavailable. Please try again later.";break;default:t.message=a?.message||`HTTP ${r} Error`}}else e.request?(t.message="Network error. Please check your internet connection.",t.code="NETWORK_ERROR"):t.message=e.message||"Request configuration error";return Promise.reject(t)});let handleApiResponse=e=>e.data,createApiError=(e,t,r)=>({message:e,status:t,code:r}),isApiError=e=>e&&"string"==typeof e.message,getErrorMessage=e=>isApiError(e)?e.message:e?.response?.data?.message?e.response.data.message:e?.message?e.message:"An unexpected error occurred",isAuthenticated=()=>!1,getAuthToken=()=>null,setAuthToken=e=>{},clearAuthToken=()=>{},pageToOffset=(e,t)=>Math.max(0,(e-1)*t),formatDateForApi=e=>"string"==typeof e?e:e.toISOString().split("T")[0],validateRequiredFields=(e,t)=>{let r=t.filter(t=>!e[t]);if(r.length>0)throw createApiError(`Missing required fields: ${r.join(", ")}`,400,"VALIDATION_ERROR")},validateEmail=e=>/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e),validateDateFormat=e=>/^\d{4}-\d{2}-\d{2}$/.test(e),validatePositiveNumber=e=>"number"==typeof e&&e>0,validateYear=e=>{let t=new Date().getFullYear();return e>=2e3&&e<=t+10},validateAttendanceStatus=e=>["present","absent","late"].includes(e),validateUserRole=e=>["student","teacher","hod","finance","admin"].includes(e),validateStudentStatus=e=>["active","inactive","graduated","suspended"].includes(e),o=i;a()}catch(e){a(e)}})},3786:(e,t,r)=>{"use strict";r.a(e,async(e,a)=>{try{r.d(t,{ZP:()=>o});var n=r(1265),s=e([n]);n=(s.then?(await s)():s)[0];let i=new class{async getStudentFees(e){if(!(0,n.fV)(e))throw Error("Student ID must be a positive integer");let t=await n.ZP.get(`/finance/students/${e}/fees`);return(0,n.Ro)(t)}async createFee(e){if((0,n.MN)(e,["studentId","amount","type","dueDate"]),!(0,n.fV)(e.studentId))throw Error("Student ID must be a positive integer");if(!(0,n.fV)(e.amount))throw Error("Amount must be a positive number");if("string"!=typeof e.type||0===e.type.trim().length)throw Error("Fee type must be a non-empty string");if(!(0,n.cN)(e.dueDate))throw Error("Invalid due date format. Use YYYY-MM-DD");let t=new Date(e.dueDate),r=new Date;if(r.setHours(0,0,0,0),t<r)throw Error("Due date cannot be in the past");if(e.description&&"string"!=typeof e.description)throw Error("Description must be a string");let a=await n.ZP.post("/finance/fees",e);return(0,n.Ro)(a)}async markFeePaid(e,t){if(!(0,n.fV)(e))throw Error("Fee ID must be a positive integer");if((0,n.MN)(t,["paymentMethod","transactionId"]),"string"!=typeof t.paymentMethod||0===t.paymentMethod.trim().length)throw Error("Payment method must be a non-empty string");if("string"!=typeof t.transactionId||0===t.transactionId.trim().length)throw Error("Transaction ID must be a non-empty string");if(t.paymentDate){if(!(0,n.cN)(t.paymentDate))throw Error("Invalid payment date format. Use YYYY-MM-DD");let e=new Date(t.paymentDate),r=new Date;if(r.setHours(23,59,59,999),e>r)throw Error("Payment date cannot be in the future")}let r=await n.ZP.put(`/finance/fees/${e}/pay`,t);return(0,n.Ro)(r)}async generateInvoice(e){if(!(0,n.fV)(e))throw Error("Student ID must be a positive integer");let t=await n.ZP.get(`/finance/students/${e}/invoice`);return(0,n.Ro)(t)}async getFinancialReports(e={}){if(e.reportType&&("string"!=typeof e.reportType||0===e.reportType.trim().length))throw Error("Report type must be a non-empty string");if(e.startDate&&!(0,n.cN)(e.startDate))throw Error("Invalid start date format. Use YYYY-MM-DD");if(e.endDate&&!(0,n.cN)(e.endDate))throw Error("Invalid end date format. Use YYYY-MM-DD");if(e.startDate&&e.endDate){let t=new Date(e.startDate),r=new Date(e.endDate);if(t>r)throw Error("Start date must be before or equal to end date")}let t=await n.ZP.get("/finance/reports",{params:e});return(0,n.Ro)(t)}async getPaymentHistory(e,t=10,r=0){if(!(0,n.fV)(e))throw Error("Student ID must be a positive integer");if(!(0,n.fV)(t)||t>100)throw Error("Limit must be a positive integer not exceeding 100");if("number"!=typeof r||r<0)throw Error("Offset must be a non-negative integer");let a=await n.ZP.get(`/finance/students/${e}/payments`,{params:{limit:t,offset:r}});return(0,n.Ro)(a)}async getOverdueFees(){let e=await n.ZP.get("/finance/overdue");return(0,n.Ro)(e)}async getStudentFeesSummary(e){let t=await this.getStudentFees(e),r=t.length,a=t.filter(e=>"paid"===e.status).length,n=t.filter(e=>"unpaid"===e.status).length,s=t.reduce((e,t)=>e+t.amount,0),i=t.filter(e=>"paid"===e.status).reduce((e,t)=>e+t.amount,0),o=new Date,d=t.filter(e=>"unpaid"===e.status&&new Date(e.due_date)<o).length;return{fees:t,totalFees:r,paidFees:a,unpaidFees:n,totalAmount:s,paidAmount:i,outstandingAmount:s-i,overdueFees:d}}async getFinancialOverview(){let[e,t]=await Promise.all([this.getOverdueFees(),this.getFinancialReports()]),r=e.length,a=e.reduce((e,t)=>e+t.amount,0);return{overdueFees:e,totalOverdue:r,totalOverdueAmount:a,reports:t}}async createTuitionFee(e,t,r,a){return this.createFee({studentId:e,amount:t,type:"Tuition",dueDate:r,description:a||"Tuition fee"})}async createLibraryFee(e,t,r,a){return this.createFee({studentId:e,amount:t,type:"Library",dueDate:r,description:a||"Library fee"})}async createExaminationFee(e,t,r,a){return this.createFee({studentId:e,amount:t,type:"Examination",dueDate:r,description:a||"Examination fee"})}async markFeePaidCash(e,t,r){return this.markFeePaid(e,{paymentMethod:"Cash",transactionId:t,paymentDate:r})}async markFeePaidBankTransfer(e,t,r){return this.markFeePaid(e,{paymentMethod:"Bank Transfer",transactionId:t,paymentDate:r})}async markFeePaidCard(e,t,r){return this.markFeePaid(e,{paymentMethod:"Card",transactionId:t,paymentDate:r})}},o=i;a()}catch(e){a(e)}})},5849:(e,t,r)=>{"use strict";r.a(e,async(e,a)=>{try{r.d(t,{ZP:()=>o});var n=r(1265),s=e([n]);n=(s.then?(await s)():s)[0];let i=new class{async getDepartmentTeachers(){let e=await n.ZP.get("/hod/teachers");return(0,n.Ro)(e)}async approveActivity(e){if((0,n.MN)(e,["activityType","activityId","approve"]),"grade"!==e.activityType)throw Error('Invalid activity type. Currently only "grade" is supported');if(!(0,n.fV)(e.activityId))throw Error("Activity ID must be a positive integer");if("boolean"!=typeof e.approve)throw Error("Approve field must be a boolean");let t=await n.ZP.post("/hod/activities/approve",e);return(0,n.Ro)(t)}async generateReport(e,t){if("string"!=typeof e||0===e.trim().length)throw Error("Report type is required and must be a non-empty string");if(t){if(t.semester&&("string"!=typeof t.semester||0===t.semester.trim().length))throw Error("Semester must be a non-empty string");if(t.year&&!(0,n.Y_)(t.year))throw Error(`Invalid year. Must be between 2000 and ${new Date().getFullYear()+10}`)}let r=await n.ZP.post(`/hod/reports/${encodeURIComponent(e)}`,t||{});return(0,n.Ro)(r)}async manageCourses(e){if((0,n.MN)(e,["action","courseData"]),!["add","edit","delete"].includes(e.action))throw Error("Invalid action. Must be one of: add, edit, delete");if(("edit"===e.action||"delete"===e.action)&&(!e.courseData.id||!(0,n.fV)(e.courseData.id)))throw Error("Course ID is required for edit/delete actions and must be a positive integer");if("add"===e.action||"edit"===e.action){if((0,n.MN)(e.courseData,["course_code","name","credits"]),"string"!=typeof e.courseData.course_code||0===e.courseData.course_code.trim().length)throw Error("Course code must be a non-empty string");if("string"!=typeof e.courseData.name||0===e.courseData.name.trim().length)throw Error("Course name must be a non-empty string");if(!(0,n.fV)(e.courseData.credits))throw Error("Credits must be a positive number")}let t=await n.ZP.post("/hod/courses/manage",e);return(0,n.Ro)(t)}async approveTimetable(e){if((0,n.MN)(e,["timetableId","approve"]),!(0,n.fV)(e.timetableId))throw Error("Timetable ID must be a positive integer");if("boolean"!=typeof e.approve)throw Error("Approve field must be a boolean");let t=await n.ZP.post("/hod/timetable/approve",e);return(0,n.Ro)(t)}async getDepartmentStats(){let e=await n.ZP.get("/hod/stats");return(0,n.Ro)(e)}async getDepartmentTimetable(e){let t="/hod/timetable";if(e){if("string"!=typeof e||0===e.trim().length)throw Error("Semester must be a non-empty string");t+=`?semester=${encodeURIComponent(e.trim())}`}let r=await n.ZP.get(t);return(0,n.Ro)(r)}async addCourse(e){return this.manageCourses({action:"add",courseData:e})}async editCourse(e){return this.manageCourses({action:"edit",courseData:e})}async deleteCourse(e){if(!(0,n.fV)(e))throw Error("Course ID must be a positive integer");return this.manageCourses({action:"delete",courseData:{id:e,course_code:"",name:"",credits:0}})}async approveGrade(e){return this.approveActivity({activityType:"grade",activityId:e,approve:!0})}async rejectGrade(e){return this.approveActivity({activityType:"grade",activityId:e,approve:!1})}async approveTimetableById(e){return this.approveTimetable({timetableId:e,approve:!0})}async rejectTimetable(e){return this.approveTimetable({timetableId:e,approve:!1})}async generateAttendanceReport(e){return this.generateReport("attendance",e)}async generateGradesReport(e){return this.generateReport("grades",e)}async getCurrentSemesterTimetable(){return this.getDepartmentTimetable("current")}async getDepartmentOverview(){let[e,t,r]=await Promise.all([this.getDepartmentTeachers(),this.getDepartmentStats(),this.getCurrentSemesterTimetable()]);return{teachers:e,stats:t,currentTimetable:r}}},o=i;a()}catch(e){a(e)}})},8303:(e,t,r)=>{"use strict";r.a(e,async(e,a)=>{try{r.d(t,{$o:()=>i.ZP,Sb:()=>l.ZP,kv:()=>n.ZP,pW:()=>o.ZP,sz:()=>d.ZP,t7:()=>s.ZP});var n=r(6870),s=r(5588),i=r(3558),o=r(5849),d=r(3786),l=r(9993),u=r(5692),m=r(1265),c=e([n,s,i,o,d,l,u,m]);[n,s,i,o,d,l,u,m]=c.then?(await c)():c,new class{isAuthenticated(){return(0,m.$8)()}getToken(){return(0,m.bW)()}clearAuth(){(0,m.Rn)()}handleError(e){return(0,m.e$)(e)}formatDate(e){return(0,m.DB)(e)}pageToOffset(e,t){return(0,m.z$)(e,t)}validateEmail(e){return(0,m.oH)(e)}validateDate(e){return(0,m.cN)(e)}validatePositiveNumber(e){return(0,m.fV)(e)}validateYear(e){return(0,m.Y_)(e)}validateAttendanceStatus(e){return(0,m.dG)(e)}validateUserRole(e){return(0,m.ap)(e)}validateStudentStatus(e){return(0,m.C9)(e)}constructor(){this.auth=n.ZP,this.student=s.ZP,this.teacher=i.ZP,this.hod=o.ZP,this.finance=d.ZP,this.admin=l.ZP,this.notifications=u.ZP}},a()}catch(e){a(e)}})},5692:(e,t,r)=>{"use strict";r.a(e,async(e,a)=>{try{r.d(t,{ZP:()=>o});var n=r(1265),s=e([n]);n=(s.then?(await s)():s)[0];let i=new class{async getNotifications(e,t){let r="/notifications";if(void 0!==e||void 0!==t){let a=e||1,s=t||10;if(!(0,n.fV)(a))throw Error("Page must be a positive integer");if(!(0,n.fV)(s)||s>100)throw Error("Limit must be a positive integer not exceeding 100");r+=`/${a}/${s}`}let a=await n.ZP.get(r);return(0,n.Ro)(a)}async markAsRead(e){if(!(0,n.fV)(e))throw Error("Notification ID must be a positive integer");let t=await n.ZP.put(`/notifications/${e}/read`);return(0,n.Ro)(t)}async markAllAsRead(){let e=await n.ZP.put("/notifications/read-all");return(0,n.Ro)(e)}async sendToUsers(e){if((0,n.MN)(e,["recipientIds","type","title","message"]),!Array.isArray(e.recipientIds)||0===e.recipientIds.length)throw Error("Recipient IDs must be a non-empty array");if(e.recipientIds.forEach((e,t)=>{if(!(0,n.fV)(e))throw Error(`Recipient ID at index ${t} must be a positive integer`)}),"string"!=typeof e.type||0===e.type.trim().length)throw Error("Type must be a non-empty string");if("string"!=typeof e.title||0===e.title.trim().length)throw Error("Title must be a non-empty string");if("string"!=typeof e.message||0===e.message.trim().length)throw Error("Message must be a non-empty string");if(e.data&&"object"!=typeof e.data)throw Error("Data field must be an object");let t=await n.ZP.post("/notifications/send/user",e);return(0,n.Ro)(t)}async sendToDepartment(e){if((0,n.MN)(e,["departmentId","type","title","message"]),!(0,n.fV)(e.departmentId))throw Error("Department ID must be a positive integer");if(e.role&&"string"!=typeof e.role)throw Error("Role must be a string");if("string"!=typeof e.type||0===e.type.trim().length)throw Error("Type must be a non-empty string");if("string"!=typeof e.title||0===e.title.trim().length)throw Error("Title must be a non-empty string");if("string"!=typeof e.message||0===e.message.trim().length)throw Error("Message must be a non-empty string");if(e.data&&"object"!=typeof e.data)throw Error("Data field must be an object");let t=await n.ZP.post("/notifications/send/department",e);return(0,n.Ro)(t)}async sendToCourse(e){if((0,n.MN)(e,["courseId","type","title","message"]),!(0,n.fV)(e.courseId))throw Error("Course ID must be a positive integer");if("string"!=typeof e.type||0===e.type.trim().length)throw Error("Type must be a non-empty string");if("string"!=typeof e.title||0===e.title.trim().length)throw Error("Title must be a non-empty string");if("string"!=typeof e.message||0===e.message.trim().length)throw Error("Message must be a non-empty string");if(e.data&&"object"!=typeof e.data)throw Error("Data field must be an object");let t=await n.ZP.post("/notifications/send/course",e);return(0,n.Ro)(t)}async getUnreadCount(){let e=await this.getNotifications();return e.filter(e=>!e.is_read).length}async getRecentNotifications(){return this.getNotifications(1,10)}async sendDepartmentAnnouncement(e,t,r,a){return this.sendToDepartment({departmentId:e,role:a,type:"announcement",title:t,message:r})}async sendAssignmentNotification(e,t,r,a){return this.sendToCourse({courseId:e,type:"assignment",title:t,message:r,data:a})}async sendExamNotification(e,t,r,a){return this.sendToCourse({courseId:e,type:"exam",title:t,message:r,data:a})}async sendGradeNotification(e,t,r,a){return this.sendToUsers({recipientIds:e,type:"grade",title:t,message:r,data:a})}async sendFeeReminder(e,t,r,a){return this.sendToUsers({recipientIds:e,type:"fee_reminder",title:t,message:r,data:a})}async sendSystemAlert(e,t,r,a){return this.sendToUsers({recipientIds:e,type:"system_alert",title:t,message:r,data:a})}async markMultipleAsRead(e){if(!Array.isArray(e)||0===e.length)throw Error("Notification IDs must be a non-empty array");let t=await Promise.allSettled(e.map(e=>this.markAsRead(e))),r=t.filter(e=>"fulfilled"===e.status).length,a=t.filter(e=>"rejected"===e.status).length,n=t.filter(e=>"rejected"===e.status).map(e=>e.reason.message);return{success:r,failed:a,errors:n}}async getNotificationsByType(e,t,r){if("string"!=typeof e||0===e.trim().length)throw Error("Type must be a non-empty string");let a=await this.getNotifications(t,r);return a.filter(t=>t.type===e)}async getUnreadNotifications(e,t){let r=await this.getNotifications(e,t);return r.filter(e=>!e.is_read)}},o=i;a()}catch(e){a(e)}})},5588:(e,t,r)=>{"use strict";r.a(e,async(e,a)=>{try{r.d(t,{ZP:()=>o});var n=r(1265),s=e([n]);n=(s.then?(await s)():s)[0];let i=new class{async getProfile(){let e=await n.ZP.get("/students/profile");return(0,n.Ro)(e)}async updateProfile(e){if(e.email&&!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e.email))throw Error("Invalid email format");if(e.date_of_birth&&!(0,n.cN)(e.date_of_birth))throw Error("Invalid date format. Use YYYY-MM-DD");if(e.enrollment_date&&!(0,n.cN)(e.enrollment_date))throw Error("Invalid enrollment date format. Use YYYY-MM-DD");if(e.graduation_date&&!(0,n.cN)(e.graduation_date))throw Error("Invalid graduation date format. Use YYYY-MM-DD");if(e.department_id&&("number"!=typeof e.department_id||e.department_id<=0))throw Error("Department ID must be a positive integer");if(e.enrollment_year&&("number"!=typeof e.enrollment_year||e.enrollment_year<2e3||e.enrollment_year>new Date().getFullYear()+10))throw Error("Invalid enrollment year");if(e.current_year&&("number"!=typeof e.current_year||e.current_year<1||e.current_year>10))throw Error("Current year must be between 1 and 10");if(e.status&&!(0,n.C9)(e.status))throw Error("Invalid status. Must be one of: active, inactive, graduated, suspended");let t=await n.ZP.put("/students/profile",e);return(0,n.Ro)(t)}async getGrades(){let e=await n.ZP.get("/students/grades");return(0,n.Ro)(e)}async getAttendance(e,t){if(!e||!t)throw Error("Start date and end date are required");if(!(0,n.cN)(e))throw Error("Invalid start date format. Use YYYY-MM-DD");if(!(0,n.cN)(t))throw Error("Invalid end date format. Use YYYY-MM-DD");let r=new Date(e),a=new Date(t);if(r>a)throw Error("Start date must be before or equal to end date");let s=await n.ZP.get(`/students/attendance?startDate=${e}&endDate=${t}`);return(0,n.Ro)(s)}async getFees(){let e=await n.ZP.get("/students/fees");return(0,n.Ro)(e)}async getTimetable(e){let t="/students/timetable";if(e){if("string"!=typeof e||0===e.trim().length)throw Error("Semester must be a non-empty string");t+=`?semester=${encodeURIComponent(e.trim())}`}let r=await n.ZP.get(t);return(0,n.Ro)(r)}async getAttendanceSummary(e,t){let r=await this.getAttendance(e,t),a=r.length,n=r.filter(e=>"present"===e.status).length,s=r.filter(e=>"absent"===e.status).length,i=r.filter(e=>"late"===e.status).length;return{totalClasses:a,presentCount:n,absentCount:s,lateCount:i,attendancePercentage:a>0?Math.round(n/a*100):0,records:r}}async getCurrentSemesterAttendance(){let e=new Date().toISOString().split("T")[0],t=new Date(Date.now()-2592e6).toISOString().split("T")[0];return this.getAttendanceSummary(t,e)}async getOutstandingFeesSummary(){let e=await this.getFees(),t=e.fees.length,r=e.fees.filter(e=>"paid"===e.status).length,a=e.fees.filter(e=>"unpaid"===e.status).length,n=new Date,s=e.fees.filter(e=>"unpaid"===e.status&&new Date(e.due_date)<n).length;return{totalFees:t,paidFees:r,unpaidFees:a,totalOutstanding:e.totalOutstanding,overdueFees:s,fees:e}}},o=i;a()}catch(e){a(e)}})},3558:(e,t,r)=>{"use strict";r.a(e,async(e,a)=>{try{r.d(t,{ZP:()=>o});var n=r(1265),s=e([n]);n=(s.then?(await s)():s)[0];let i=new class{async getProfile(){let e=await n.ZP.get("/teacher/profile");return(0,n.Ro)(e)}async updateProfile(e){if(e.email&&!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e.email))throw Error("Invalid email format");if(e.department_id&&!(0,n.fV)(e.department_id))throw Error("Department ID must be a positive integer");if(e.first_name&&"string"!=typeof e.first_name)throw Error("First name must be a string");if(e.last_name&&"string"!=typeof e.last_name)throw Error("Last name must be a string");let t=await n.ZP.put("/teacher/profile",e);return(0,n.Ro)(t)}async getClasses(){let e=await n.ZP.get("/teacher/classes");return(0,n.Ro)(e)}async markAttendance(e){if((0,n.MN)(e,["courseId","attendance","date"]),!(0,n.fV)(e.courseId))throw Error("Course ID must be a positive integer");if(!(0,n.cN)(e.date))throw Error("Invalid date format. Use YYYY-MM-DD");if(!Array.isArray(e.attendance)||0===e.attendance.length)throw Error("Attendance array is required and must not be empty");e.attendance.forEach((e,t)=>{if(!(0,n.fV)(e.studentId))throw Error(`Invalid student ID at index ${t}. Must be a positive integer`);if(!(0,n.dG)(e.status))throw Error(`Invalid attendance status at index ${t}. Must be one of: present, absent, late`);if(e.notes&&"string"!=typeof e.notes)throw Error(`Notes at index ${t} must be a string`)});let t=new Date(e.date),r=new Date;if(r.setHours(23,59,59,999),t>r)throw Error("Cannot mark attendance for future dates");let a=await n.ZP.post("/teacher/attendance",e);return(0,n.Ro)(a)}async enterGrades(e){if((0,n.MN)(e,["courseId","grades"]),!(0,n.fV)(e.courseId))throw Error("Course ID must be a positive integer");if(!Array.isArray(e.grades)||0===e.grades.length)throw Error("Grades array is required and must not be empty");e.grades.forEach((e,t)=>{if((0,n.MN)(e,["studentId","grade","semester","year"]),!(0,n.fV)(e.studentId))throw Error(`Invalid student ID at index ${t}. Must be a positive integer`);if("string"!=typeof e.grade||0===e.grade.trim().length)throw Error(`Grade at index ${t} must be a non-empty string`);if("string"!=typeof e.semester||0===e.semester.trim().length)throw Error(`Semester at index ${t} must be a non-empty string`);if(!(0,n.Y_)(e.year))throw Error(`Invalid year at index ${t}. Must be between 2000 and ${new Date().getFullYear()+10}`);if(e.comments&&"string"!=typeof e.comments)throw Error(`Comments at index ${t} must be a string`)});let t=await n.ZP.post("/teacher/grades",e);return(0,n.Ro)(t)}async getTimetable(e){let t="/teacher/timetable";if(e){if("string"!=typeof e||0===e.trim().length)throw Error("Semester must be a non-empty string");t+=`?semester=${encodeURIComponent(e.trim())}`}let r=await n.ZP.get(t);return(0,n.Ro)(r)}async getClassStudents(e){let t="/teacher/classes";if(e){if(!(0,n.fV)(e))throw Error("Course ID must be a positive integer");t+=`/${e}`}t+="/students";let r=await n.ZP.get(t);return(0,n.Ro)(r)}async getAllStudents(){return this.getClassStudents()}async getCourseStudents(e){return this.getClassStudents(e)}async markBulkAttendance(e,t,r="present",a){let n=await this.getCourseStudents(e),s=n.map(e=>{let t=a?.find(t=>t.studentId===e.id);return{studentId:e.id,status:t?.status||r,notes:t?.notes||""}});return this.markAttendance({courseId:e,attendance:s,date:t})}async enterBulkGrades(e,t,r,a){if(!(0,n.fV)(e))throw Error("Course ID must be a positive integer");if("string"!=typeof t||0===t.trim().length)throw Error("Semester must be a non-empty string");if(!(0,n.Y_)(r))throw Error(`Invalid year. Must be between 2000 and ${new Date().getFullYear()+10}`);if(!Array.isArray(a)||0===a.length)throw Error("Grades array is required and must not be empty");let s=a.map(e=>({studentId:e.studentId,grade:e.grade,semester:t,year:r,comments:e.comments||""}));return this.enterGrades({courseId:e,grades:s})}async getDaySchedule(e,t){if("number"!=typeof e||e<1||e>7)throw Error("Day of week must be a number between 1 (Monday) and 7 (Sunday)");let r=await this.getTimetable(t);return r.filter(t=>t.day_of_week===e)}async getTodaySchedule(e){let t=new Date,r=0===t.getDay()?7:t.getDay();return this.getDaySchedule(r,e)}},o=i;a()}catch(e){a(e)}})},3612:(e,t,r)=>{"use strict";r.d(t,{vl:()=>initializeA11y});let initializeA11y=()=>{let e=document.createElement("a");e.href="#main-content",e.textContent="Skip to main content",e.className="skip-link",e.style.cssText=`
    position: absolute;
    top: -40px;
    left: 6px;
    background: #000;
    color: #fff;
    padding: 8px;
    text-decoration: none;
    z-index: 1000;
    transition: top 0.3s;
  `,e.addEventListener("focus",()=>{e.style.top="6px"}),e.addEventListener("blur",()=>{e.style.top="-40px"}),document.body.insertBefore(e,document.body.firstChild)}},3231:(e,t,r)=>{"use strict";r.d(t,{$J:()=>registerServiceWorker,Er:()=>preloadCriticalResources,Fz:()=>optimizeCriticalRenderingPath});let registerServiceWorker=()=>{"serviceWorker"in navigator&&window.addEventListener("load",()=>{navigator.serviceWorker.register("/sw.js").then(e=>{}).catch(e=>{})})},preloadCriticalResources=()=>{[{href:"/fonts/inter.woff2",as:"font",type:"font/woff2",crossOrigin:"anonymous"},{href:"/api/auth/me",as:"fetch",crossOrigin:"same-origin"}].forEach(e=>{let t=document.createElement("link");t.rel="preload",Object.assign(t,e),document.head.appendChild(t)})},optimizeCriticalRenderingPath=()=>{let e=`
    .loading-spinner { animation: spin 1s linear infinite; }
    @keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }
    .btn-primary { background-color: #1B365D; color: white; }
  `,t=document.createElement("style");t.textContent=e,document.head.appendChild(t),["https://fonts.googleapis.com","https://api.example.com"].forEach(e=>{let t=document.createElement("link");t.rel="preconnect",t.href=e,document.head.appendChild(t)})}},108:()=>{}};